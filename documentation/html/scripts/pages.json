[{"name":"abstract class AppDatabase : RoomDatabase","description":"com.example.datamanager.database.AppDatabase","location":"data-manager/com.example.datamanager.database/-app-database/index.html","searchKeys":["AppDatabase","abstract class AppDatabase : RoomDatabase","com.example.datamanager.database.AppDatabase"]},{"name":"abstract fun <B : Any> export(bindingEntity: B, destinationPath: File): LiveData<WorkResult>","description":"com.example.datamanager.exchange.ExportFileManager.export","location":"data-manager/com.example.datamanager.exchange/-export-file-manager/export.html","searchKeys":["export","abstract fun <B : Any> export(bindingEntity: B, destinationPath: File): LiveData<WorkResult>","com.example.datamanager.exchange.ExportFileManager.export"]},{"name":"abstract fun <T> getActualObject(clazz: Class<T>): LiveData<LoadResult<T>>","description":"com.example.datamanager.external.handler.ObjectBindingHandler.getActualObject","location":"data-manager/com.example.datamanager.external.handler/-object-binding-handler/get-actual-object.html","searchKeys":["getActualObject","abstract fun <T> getActualObject(clazz: Class<T>): LiveData<LoadResult<T>>","com.example.datamanager.external.handler.ObjectBindingHandler.getActualObject"]},{"name":"abstract fun <T> getRepository(clazz: Class<T>): Repository<T>","description":"com.example.datamanager.database.repository.RepositoryProvider.getRepository","location":"data-manager/com.example.datamanager.database.repository/-repository-provider/get-repository.html","searchKeys":["getRepository","abstract fun <T> getRepository(clazz: Class<T>): Repository<T>","com.example.datamanager.database.repository.RepositoryProvider.getRepository"]},{"name":"abstract fun <T> nextObject(clazz: Class<T>): LiveData<LoadResult<T>>","description":"com.example.datamanager.external.handler.ObjectBindingHandler.nextObject","location":"data-manager/com.example.datamanager.external.handler/-object-binding-handler/next-object.html","searchKeys":["nextObject","abstract fun <T> nextObject(clazz: Class<T>): LiveData<LoadResult<T>>","com.example.datamanager.external.handler.ObjectBindingHandler.nextObject"]},{"name":"abstract fun <T> previousObject(clazz: Class<T>): LiveData<LoadResult<T>>","description":"com.example.datamanager.external.handler.ObjectBindingHandler.previousObject","location":"data-manager/com.example.datamanager.external.handler/-object-binding-handler/previous-object.html","searchKeys":["previousObject","abstract fun <T> previousObject(clazz: Class<T>): LiveData<LoadResult<T>>","com.example.datamanager.external.handler.ObjectBindingHandler.previousObject"]},{"name":"abstract fun <T> setObjectBinding(objectBinding: T): LiveData<LoadResult<T>>","description":"com.example.datamanager.external.handler.ObjectBindingHandler.setObjectBinding","location":"data-manager/com.example.datamanager.external.handler/-object-binding-handler/set-object-binding.html","searchKeys":["setObjectBinding","abstract fun <T> setObjectBinding(objectBinding: T): LiveData<LoadResult<T>>","com.example.datamanager.external.handler.ObjectBindingHandler.setObjectBinding"]},{"name":"abstract fun add(addObject: T): Long","description":"com.example.datamanager.database.repository.Repository.add","location":"data-manager/com.example.datamanager.database.repository/-repository/add.html","searchKeys":["add","abstract fun add(addObject: T): Long","com.example.datamanager.database.repository.Repository.add"]},{"name":"abstract fun addAll(addObjects: List<T>)","description":"com.example.datamanager.database.repository.Repository.addAll","location":"data-manager/com.example.datamanager.database.repository/-repository/add-all.html","searchKeys":["addAll","abstract fun addAll(addObjects: List<T>)","com.example.datamanager.database.repository.Repository.addAll"]},{"name":"abstract fun addListenerToNearestObjects(gpsLocation: Location, radius: Int, listener: (List<T>) -> Unit)","description":"com.example.datamanager.search.SearchLocationObjectManager.addListenerToNearestObjects","location":"data-manager/com.example.datamanager.search/-search-location-object-manager/add-listener-to-nearest-objects.html","searchKeys":["addListenerToNearestObjects","abstract fun addListenerToNearestObjects(gpsLocation: Location, radius: Int, listener: (List<T>) -> Unit)","com.example.datamanager.search.SearchLocationObjectManager.addListenerToNearestObjects"]},{"name":"abstract fun additionalDao(): AdditionalDAO","description":"com.example.datamanager.database.AppDatabase.additionalDao","location":"data-manager/com.example.datamanager.database/-app-database/additional-dao.html","searchKeys":["additionalDao","abstract fun additionalDao(): AdditionalDAO","com.example.datamanager.database.AppDatabase.additionalDao"]},{"name":"abstract fun clearAutoincrement(): Int","description":"com.example.datamanager.database.dao.BaseDAO.clearAutoincrement","location":"data-manager/com.example.datamanager.database.dao/-base-d-a-o/clear-autoincrement.html","searchKeys":["clearAutoincrement","abstract fun clearAutoincrement(): Int","com.example.datamanager.database.dao.BaseDAO.clearAutoincrement"]},{"name":"abstract fun coordinateDao(): CoordinateDAO","description":"com.example.datamanager.database.AppDatabase.coordinateDao","location":"data-manager/com.example.datamanager.database/-app-database/coordinate-dao.html","searchKeys":["coordinateDao","abstract fun coordinateDao(): CoordinateDAO","com.example.datamanager.database.AppDatabase.coordinateDao"]},{"name":"abstract fun delete(deleteObject: T)","description":"com.example.datamanager.database.repository.Repository.delete","location":"data-manager/com.example.datamanager.database.repository/-repository/delete.html","searchKeys":["delete","abstract fun delete(deleteObject: T)","com.example.datamanager.database.repository.Repository.delete"]},{"name":"abstract fun delete(obj: T)","description":"com.example.datamanager.database.dao.BaseDAO.delete","location":"data-manager/com.example.datamanager.database.dao/-base-d-a-o/delete.html","searchKeys":["delete","abstract fun delete(obj: T)","com.example.datamanager.database.dao.BaseDAO.delete"]},{"name":"abstract fun deleteAll()","description":"com.example.datamanager.database.dao.AdditionalDAO.deleteAll","location":"data-manager/com.example.datamanager.database.dao/-additional-d-a-o/delete-all.html","searchKeys":["deleteAll","abstract fun deleteAll()","com.example.datamanager.database.dao.AdditionalDAO.deleteAll"]},{"name":"abstract fun deleteAll()","description":"com.example.datamanager.database.dao.CoordinateDAO.deleteAll","location":"data-manager/com.example.datamanager.database.dao/-coordinate-d-a-o/delete-all.html","searchKeys":["deleteAll","abstract fun deleteAll()","com.example.datamanager.database.dao.CoordinateDAO.deleteAll"]},{"name":"abstract fun deleteAll()","description":"com.example.datamanager.database.dao.PassportDAO.deleteAll","location":"data-manager/com.example.datamanager.database.dao/-passport-d-a-o/delete-all.html","searchKeys":["deleteAll","abstract fun deleteAll()","com.example.datamanager.database.dao.PassportDAO.deleteAll"]},{"name":"abstract fun deleteAll()","description":"com.example.datamanager.database.dao.TowerDAO.deleteAll","location":"data-manager/com.example.datamanager.database.dao/-tower-d-a-o/delete-all.html","searchKeys":["deleteAll","abstract fun deleteAll()","com.example.datamanager.database.dao.TowerDAO.deleteAll"]},{"name":"abstract fun deleteAll()","description":"com.example.datamanager.database.repository.Repository.deleteAll","location":"data-manager/com.example.datamanager.database.repository/-repository/delete-all.html","searchKeys":["deleteAll","abstract fun deleteAll()","com.example.datamanager.database.repository.Repository.deleteAll"]},{"name":"abstract fun findAll(): List<T>","description":"com.example.datamanager.database.repository.Repository.findAll","location":"data-manager/com.example.datamanager.database.repository/-repository/find-all.html","searchKeys":["findAll","abstract fun findAll(): List<T>","com.example.datamanager.database.repository.Repository.findAll"]},{"name":"abstract fun findCurrentWithParameter(query: SupportSQLiteQuery): T?","description":"com.example.datamanager.database.repository.Repository.findCurrentWithParameter","location":"data-manager/com.example.datamanager.database.repository/-repository/find-current-with-parameter.html","searchKeys":["findCurrentWithParameter","abstract fun findCurrentWithParameter(query: SupportSQLiteQuery): T?","com.example.datamanager.database.repository.Repository.findCurrentWithParameter"]},{"name":"abstract fun findObjects(gpsLocation: Location, radius: Int): MutableLiveData<RequestResult<T>>","description":"com.example.datamanager.search.SearchLocationObjectManager.findObjects","location":"data-manager/com.example.datamanager.search/-search-location-object-manager/find-objects.html","searchKeys":["findObjects","abstract fun findObjects(gpsLocation: Location, radius: Int): MutableLiveData<RequestResult<T>>","com.example.datamanager.search.SearchLocationObjectManager.findObjects"]},{"name":"abstract fun findWithParameters(query: SupportSQLiteQuery): List<T>","description":"com.example.datamanager.database.repository.Repository.findWithParameters","location":"data-manager/com.example.datamanager.database.repository/-repository/find-with-parameters.html","searchKeys":["findWithParameters","abstract fun findWithParameters(query: SupportSQLiteQuery): List<T>","com.example.datamanager.database.repository.Repository.findWithParameters"]},{"name":"abstract fun getActualInternalObject(): LiveData<LoadResult<E>>","description":"com.example.datamanager.external.handler.InternalObjectBindingHandler.getActualInternalObject","location":"data-manager/com.example.datamanager.external.handler/-internal-object-binding-handler/get-actual-internal-object.html","searchKeys":["getActualInternalObject","abstract fun getActualInternalObject(): LiveData<LoadResult<E>>","com.example.datamanager.external.handler.InternalObjectBindingHandler.getActualInternalObject"]},{"name":"abstract fun getAll(): LiveData<List<Additional>>","description":"com.example.datamanager.database.dao.AdditionalDAO.getAll","location":"data-manager/com.example.datamanager.database.dao/-additional-d-a-o/get-all.html","searchKeys":["getAll","abstract fun getAll(): LiveData<List<Additional>>","com.example.datamanager.database.dao.AdditionalDAO.getAll"]},{"name":"abstract fun getAll(): LiveData<List<Coordinate>>","description":"com.example.datamanager.database.dao.CoordinateDAO.getAll","location":"data-manager/com.example.datamanager.database.dao/-coordinate-d-a-o/get-all.html","searchKeys":["getAll","abstract fun getAll(): LiveData<List<Coordinate>>","com.example.datamanager.database.dao.CoordinateDAO.getAll"]},{"name":"abstract fun getAll(): LiveData<List<Passport>>","description":"com.example.datamanager.database.dao.PassportDAO.getAll","location":"data-manager/com.example.datamanager.database.dao/-passport-d-a-o/get-all.html","searchKeys":["getAll","abstract fun getAll(): LiveData<List<Passport>>","com.example.datamanager.database.dao.PassportDAO.getAll"]},{"name":"abstract fun getAll(): LiveData<List<Tower>>","description":"com.example.datamanager.database.dao.TowerDAO.getAll","location":"data-manager/com.example.datamanager.database.dao/-tower-d-a-o/get-all.html","searchKeys":["getAll","abstract fun getAll(): LiveData<List<Tower>>","com.example.datamanager.database.dao.TowerDAO.getAll"]},{"name":"abstract fun getByCoordinateId(coord_id: Long): List<Additional>","description":"com.example.datamanager.database.dao.AdditionalDAO.getByCoordinateId","location":"data-manager/com.example.datamanager.database.dao/-additional-d-a-o/get-by-coordinate-id.html","searchKeys":["getByCoordinateId","abstract fun getByCoordinateId(coord_id: Long): List<Additional>","com.example.datamanager.database.dao.AdditionalDAO.getByCoordinateId"]},{"name":"abstract fun getByCoordinateId(coord_id: Long): List<Tower>","description":"com.example.datamanager.database.dao.TowerDAO.getByCoordinateId","location":"data-manager/com.example.datamanager.database.dao/-tower-d-a-o/get-by-coordinate-id.html","searchKeys":["getByCoordinateId","abstract fun getByCoordinateId(coord_id: Long): List<Tower>","com.example.datamanager.database.dao.TowerDAO.getByCoordinateId"]},{"name":"abstract fun getById(add_id: Long): Additional?","description":"com.example.datamanager.database.dao.AdditionalDAO.getById","location":"data-manager/com.example.datamanager.database.dao/-additional-d-a-o/get-by-id.html","searchKeys":["getById","abstract fun getById(add_id: Long): Additional?","com.example.datamanager.database.dao.AdditionalDAO.getById"]},{"name":"abstract fun getById(coord_id: Long): Coordinate?","description":"com.example.datamanager.database.dao.CoordinateDAO.getById","location":"data-manager/com.example.datamanager.database.dao/-coordinate-d-a-o/get-by-id.html","searchKeys":["getById","abstract fun getById(coord_id: Long): Coordinate?","com.example.datamanager.database.dao.CoordinateDAO.getById"]},{"name":"abstract fun getById(id: Long): T?","description":"com.example.datamanager.database.repository.Repository.getById","location":"data-manager/com.example.datamanager.database.repository/-repository/get-by-id.html","searchKeys":["getById","abstract fun getById(id: Long): T?","com.example.datamanager.database.repository.Repository.getById"]},{"name":"abstract fun getById(passport_id: Long): Passport?","description":"com.example.datamanager.database.dao.PassportDAO.getById","location":"data-manager/com.example.datamanager.database.dao/-passport-d-a-o/get-by-id.html","searchKeys":["getById","abstract fun getById(passport_id: Long): Passport?","com.example.datamanager.database.dao.PassportDAO.getById"]},{"name":"abstract fun getById(tower_id: Long): Tower?","description":"com.example.datamanager.database.dao.TowerDAO.getById","location":"data-manager/com.example.datamanager.database.dao/-tower-d-a-o/get-by-id.html","searchKeys":["getById","abstract fun getById(tower_id: Long): Tower?","com.example.datamanager.database.dao.TowerDAO.getById"]},{"name":"abstract fun getByLongitudeAndLatitude(longitude: Double, latitude: Double): Coordinate?","description":"com.example.datamanager.database.dao.CoordinateDAO.getByLongitudeAndLatitude","location":"data-manager/com.example.datamanager.database.dao/-coordinate-d-a-o/get-by-longitude-and-latitude.html","searchKeys":["getByLongitudeAndLatitude","abstract fun getByLongitudeAndLatitude(longitude: Double, latitude: Double): Coordinate?","com.example.datamanager.database.dao.CoordinateDAO.getByLongitudeAndLatitude"]},{"name":"abstract fun getByPassportId(passport_id: Long): List<Tower>","description":"com.example.datamanager.database.dao.TowerDAO.getByPassportId","location":"data-manager/com.example.datamanager.database.dao/-tower-d-a-o/get-by-passport-id.html","searchKeys":["getByPassportId","abstract fun getByPassportId(passport_id: Long): List<Tower>","com.example.datamanager.database.dao.TowerDAO.getByPassportId"]},{"name":"abstract fun getByTowerId(tower_id: Long): List<Additional>","description":"com.example.datamanager.database.dao.AdditionalDAO.getByTowerId","location":"data-manager/com.example.datamanager.database.dao/-additional-d-a-o/get-by-tower-id.html","searchKeys":["getByTowerId","abstract fun getByTowerId(tower_id: Long): List<Additional>","com.example.datamanager.database.dao.AdditionalDAO.getByTowerId"]},{"name":"abstract fun getCurrentObjectWithParameters(query: SupportSQLiteQuery): T?","description":"com.example.datamanager.database.dao.BaseDAO.getCurrentObjectWithParameters","location":"data-manager/com.example.datamanager.database.dao/-base-d-a-o/get-current-object-with-parameters.html","searchKeys":["getCurrentObjectWithParameters","abstract fun getCurrentObjectWithParameters(query: SupportSQLiteQuery): T?","com.example.datamanager.database.dao.BaseDAO.getCurrentObjectWithParameters"]},{"name":"abstract fun getData(): LiveData<List<T>>","description":"com.example.datamanager.database.repository.Repository.getData","location":"data-manager/com.example.datamanager.database.repository/-repository/get-data.html","searchKeys":["getData","abstract fun getData(): LiveData<List<T>>","com.example.datamanager.database.repository.Repository.getData"]},{"name":"abstract fun getWithParameters(query: SupportSQLiteQuery): List<T>","description":"com.example.datamanager.database.dao.BaseDAO.getWithParameters","location":"data-manager/com.example.datamanager.database.dao/-base-d-a-o/get-with-parameters.html","searchKeys":["getWithParameters","abstract fun getWithParameters(query: SupportSQLiteQuery): List<T>","com.example.datamanager.database.dao.BaseDAO.getWithParameters"]},{"name":"abstract fun import(file: File): LiveData<WorkResult>","description":"com.example.datamanager.exchange.ImportFileManager.import","location":"data-manager/com.example.datamanager.exchange/-import-file-manager/import.html","searchKeys":["import","abstract fun import(file: File): LiveData<WorkResult>","com.example.datamanager.exchange.ImportFileManager.import"]},{"name":"abstract fun import(files: List<File>): LiveData<WorkResult>","description":"com.example.datamanager.exchange.ImportFileManager.import","location":"data-manager/com.example.datamanager.exchange/-import-file-manager/import.html","searchKeys":["import","abstract fun import(files: List<File>): LiveData<WorkResult>","com.example.datamanager.exchange.ImportFileManager.import"]},{"name":"abstract fun insert(obj: T): Long","description":"com.example.datamanager.database.dao.BaseDAO.insert","location":"data-manager/com.example.datamanager.database.dao/-base-d-a-o/insert.html","searchKeys":["insert","abstract fun insert(obj: T): Long","com.example.datamanager.database.dao.BaseDAO.insert"]},{"name":"abstract fun insert(objs: List<T>)","description":"com.example.datamanager.database.dao.BaseDAO.insert","location":"data-manager/com.example.datamanager.database.dao/-base-d-a-o/insert.html","searchKeys":["insert","abstract fun insert(objs: List<T>)","com.example.datamanager.database.dao.BaseDAO.insert"]},{"name":"abstract fun nextInternalObject(): LiveData<LoadResult<E>>","description":"com.example.datamanager.external.handler.InternalObjectBindingHandler.nextInternalObject","location":"data-manager/com.example.datamanager.external.handler/-internal-object-binding-handler/next-internal-object.html","searchKeys":["nextInternalObject","abstract fun nextInternalObject(): LiveData<LoadResult<E>>","com.example.datamanager.external.handler.InternalObjectBindingHandler.nextInternalObject"]},{"name":"abstract fun passportDao(): PassportDAO","description":"com.example.datamanager.database.AppDatabase.passportDao","location":"data-manager/com.example.datamanager.database/-app-database/passport-dao.html","searchKeys":["passportDao","abstract fun passportDao(): PassportDAO","com.example.datamanager.database.AppDatabase.passportDao"]},{"name":"abstract fun previousInternalObject(): LiveData<LoadResult<E>>","description":"com.example.datamanager.external.handler.InternalObjectBindingHandler.previousInternalObject","location":"data-manager/com.example.datamanager.external.handler/-internal-object-binding-handler/previous-internal-object.html","searchKeys":["previousInternalObject","abstract fun previousInternalObject(): LiveData<LoadResult<E>>","com.example.datamanager.external.handler.InternalObjectBindingHandler.previousInternalObject"]},{"name":"abstract fun setInternalObject(internalObject: E): LiveData<LoadResult<E>>","description":"com.example.datamanager.external.handler.InternalObjectBindingHandler.setInternalObject","location":"data-manager/com.example.datamanager.external.handler/-internal-object-binding-handler/set-internal-object.html","searchKeys":["setInternalObject","abstract fun setInternalObject(internalObject: E): LiveData<LoadResult<E>>","com.example.datamanager.external.handler.InternalObjectBindingHandler.setInternalObject"]},{"name":"abstract fun towerDao(): TowerDAO","description":"com.example.datamanager.database.AppDatabase.towerDao","location":"data-manager/com.example.datamanager.database/-app-database/tower-dao.html","searchKeys":["towerDao","abstract fun towerDao(): TowerDAO","com.example.datamanager.database.AppDatabase.towerDao"]},{"name":"abstract fun update(obj: T)","description":"com.example.datamanager.database.dao.BaseDAO.update","location":"data-manager/com.example.datamanager.database.dao/-base-d-a-o/update.html","searchKeys":["update","abstract fun update(obj: T)","com.example.datamanager.database.dao.BaseDAO.update"]},{"name":"abstract fun update(updateObject: T)","description":"com.example.datamanager.database.repository.Repository.update","location":"data-manager/com.example.datamanager.database.repository/-repository/update.html","searchKeys":["update","abstract fun update(updateObject: T)","com.example.datamanager.database.repository.Repository.update"]},{"name":"class AdditionalBindingHandlerImpl(appDatabase: AppDatabase) : InternalObjectBindingHandler<Additional> ","description":"com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl","location":"data-manager/com.example.datamanager.external.handler.impl/-additional-binding-handler-impl/index.html","searchKeys":["AdditionalBindingHandlerImpl","class AdditionalBindingHandlerImpl(appDatabase: AppDatabase) : InternalObjectBindingHandler<Additional> ","com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl"]},{"name":"class AdditionalRepository(additionalDAO: AdditionalDAO) : Repository<Additional> ","description":"com.example.datamanager.database.repository.impl.AdditionalRepository","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/index.html","searchKeys":["AdditionalRepository","class AdditionalRepository(additionalDAO: AdditionalDAO) : Repository<Additional> ","com.example.datamanager.database.repository.impl.AdditionalRepository"]},{"name":"class Canceled : WorkResult","description":"com.example.datamanager.external.entities.WorkResult.Canceled","location":"data-manager/com.example.datamanager.external.entities/-work-result/-canceled/index.html","searchKeys":["Canceled","class Canceled : WorkResult","com.example.datamanager.external.entities.WorkResult.Canceled"]},{"name":"class Canceled<T> : RequestResult<T> ","description":"com.example.datamanager.external.entities.RequestResult.Canceled","location":"data-manager/com.example.datamanager.external.entities/-request-result/-canceled/index.html","searchKeys":["Canceled","class Canceled<T> : RequestResult<T> ","com.example.datamanager.external.entities.RequestResult.Canceled"]},{"name":"class Completed : WorkResult","description":"com.example.datamanager.external.entities.WorkResult.Completed","location":"data-manager/com.example.datamanager.external.entities/-work-result/-completed/index.html","searchKeys":["Completed","class Completed : WorkResult","com.example.datamanager.external.entities.WorkResult.Completed"]},{"name":"class Completed<T>(data: List<T>?) : RequestResult<T> ","description":"com.example.datamanager.external.entities.RequestResult.Completed","location":"data-manager/com.example.datamanager.external.entities/-request-result/-completed/index.html","searchKeys":["Completed","class Completed<T>(data: List<T>?) : RequestResult<T> ","com.example.datamanager.external.entities.RequestResult.Completed"]},{"name":"class Converter","description":"com.example.datamanager.database.converter.Converter","location":"data-manager/com.example.datamanager.database.converter/-converter/index.html","searchKeys":["Converter","class Converter","com.example.datamanager.database.converter.Converter"]},{"name":"class CoordinateRepository(coordinateDAO: CoordinateDAO) : Repository<Coordinate> ","description":"com.example.datamanager.database.repository.impl.CoordinateRepository","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/index.html","searchKeys":["CoordinateRepository","class CoordinateRepository(coordinateDAO: CoordinateDAO) : Repository<Coordinate> ","com.example.datamanager.database.repository.impl.CoordinateRepository"]},{"name":"class DataManager(database: AppDatabase, searchLocationObjectManager: SearchLocationObjectManager<Any>) : IPassportManager<Any> ","description":"com.example.datamanager.DataManager","location":"data-manager/com.example.datamanager/-data-manager/index.html","searchKeys":["DataManager","class DataManager(database: AppDatabase, searchLocationObjectManager: SearchLocationObjectManager<Any>) : IPassportManager<Any> ","com.example.datamanager.DataManager"]},{"name":"class Error : WorkResult","description":"com.example.datamanager.external.entities.WorkResult.Error","location":"data-manager/com.example.datamanager.external.entities/-work-result/-error/index.html","searchKeys":["Error","class Error : WorkResult","com.example.datamanager.external.entities.WorkResult.Error"]},{"name":"class Error<T>(error: Exception) : RequestResult<T> ","description":"com.example.datamanager.external.entities.RequestResult.Error","location":"data-manager/com.example.datamanager.external.entities/-request-result/-error/index.html","searchKeys":["Error","class Error<T>(error: Exception) : RequestResult<T> ","com.example.datamanager.external.entities.RequestResult.Error"]},{"name":"class Error<T>(error: Exception, data: T?) : LoadResult<T> ","description":"com.example.datamanager.external.entities.LoadResult.Error","location":"data-manager/com.example.datamanager.external.entities/-load-result/-error/index.html","searchKeys":["Error","class Error<T>(error: Exception, data: T?) : LoadResult<T> ","com.example.datamanager.external.entities.LoadResult.Error"]},{"name":"class ExportFileManagerImpl(appDatabase: AppDatabase) : ExportFileManager","description":"com.example.datamanager.exchange.impl.ExportFileManagerImpl","location":"data-manager/com.example.datamanager.exchange.impl/-export-file-manager-impl/index.html","searchKeys":["ExportFileManagerImpl","class ExportFileManagerImpl(appDatabase: AppDatabase) : ExportFileManager","com.example.datamanager.exchange.impl.ExportFileManagerImpl"]},{"name":"class ImportFileManagerImpl(appDatabase: AppDatabase) : ImportFileManager","description":"com.example.datamanager.exchange.impl.ImportFileManagerImpl","location":"data-manager/com.example.datamanager.exchange.impl/-import-file-manager-impl/index.html","searchKeys":["ImportFileManagerImpl","class ImportFileManagerImpl(appDatabase: AppDatabase) : ImportFileManager","com.example.datamanager.exchange.impl.ImportFileManagerImpl"]},{"name":"class Loading : WorkResult","description":"com.example.datamanager.external.entities.WorkResult.Loading","location":"data-manager/com.example.datamanager.external.entities/-work-result/-loading/index.html","searchKeys":["Loading","class Loading : WorkResult","com.example.datamanager.external.entities.WorkResult.Loading"]},{"name":"class Loading<T> : RequestResult<T> ","description":"com.example.datamanager.external.entities.RequestResult.Loading","location":"data-manager/com.example.datamanager.external.entities/-request-result/-loading/index.html","searchKeys":["Loading","class Loading<T> : RequestResult<T> ","com.example.datamanager.external.entities.RequestResult.Loading"]},{"name":"class Loading<T>(data: T?) : LoadResult<T> ","description":"com.example.datamanager.external.entities.LoadResult.Loading","location":"data-manager/com.example.datamanager.external.entities/-load-result/-loading/index.html","searchKeys":["Loading","class Loading<T>(data: T?) : LoadResult<T> ","com.example.datamanager.external.entities.LoadResult.Loading"]},{"name":"class ObjectBindingHandlerImpl(appDatabase: AppDatabase) : ObjectBindingHandler","description":"com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl","location":"data-manager/com.example.datamanager.external.handler.impl/-object-binding-handler-impl/index.html","searchKeys":["ObjectBindingHandlerImpl","class ObjectBindingHandlerImpl(appDatabase: AppDatabase) : ObjectBindingHandler","com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl"]},{"name":"class OnDiscovered<T>(dataList: List<T>) : NearestObjectListener<T> ","description":"com.example.datamanager.external.entities.NearestObjectListener.OnDiscovered","location":"data-manager/com.example.datamanager.external.entities/-nearest-object-listener/-on-discovered/index.html","searchKeys":["OnDiscovered","class OnDiscovered<T>(dataList: List<T>) : NearestObjectListener<T> ","com.example.datamanager.external.entities.NearestObjectListener.OnDiscovered"]},{"name":"class PassportRepository(passportDAO: PassportDAO) : Repository<Passport> ","description":"com.example.datamanager.database.repository.impl.PassportRepository","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/index.html","searchKeys":["PassportRepository","class PassportRepository(passportDAO: PassportDAO) : Repository<Passport> ","com.example.datamanager.database.repository.impl.PassportRepository"]},{"name":"class Progress(progress: Int) : WorkResult","description":"com.example.datamanager.external.entities.WorkResult.Progress","location":"data-manager/com.example.datamanager.external.entities/-work-result/-progress/index.html","searchKeys":["Progress","class Progress(progress: Int) : WorkResult","com.example.datamanager.external.entities.WorkResult.Progress"]},{"name":"class Progress<T>(progress: Int) : RequestResult<T> ","description":"com.example.datamanager.external.entities.RequestResult.Progress","location":"data-manager/com.example.datamanager.external.entities/-request-result/-progress/index.html","searchKeys":["Progress","class Progress<T>(progress: Int) : RequestResult<T> ","com.example.datamanager.external.entities.RequestResult.Progress"]},{"name":"class RepositoryProviderImpl(database: AppDatabase) : RepositoryProvider","description":"com.example.datamanager.database.repository.impl.RepositoryProviderImpl","location":"data-manager/com.example.datamanager.database.repository.impl/-repository-provider-impl/index.html","searchKeys":["RepositoryProviderImpl","class RepositoryProviderImpl(database: AppDatabase) : RepositoryProvider","com.example.datamanager.database.repository.impl.RepositoryProviderImpl"]},{"name":"class SearchLocationObjectManagerImpl(locationManager: LocationManager, context: Context, appDatabase: AppDatabase) : SearchLocationObjectManager<Any> ","description":"com.example.datamanager.search.impl.SearchLocationObjectManagerImpl","location":"data-manager/com.example.datamanager.search.impl/-search-location-object-manager-impl/index.html","searchKeys":["SearchLocationObjectManagerImpl","class SearchLocationObjectManagerImpl(locationManager: LocationManager, context: Context, appDatabase: AppDatabase) : SearchLocationObjectManager<Any> ","com.example.datamanager.search.impl.SearchLocationObjectManagerImpl"]},{"name":"class Success<T>(data: T) : LoadResult<T> ","description":"com.example.datamanager.external.entities.LoadResult.Success","location":"data-manager/com.example.datamanager.external.entities/-load-result/-success/index.html","searchKeys":["Success","class Success<T>(data: T) : LoadResult<T> ","com.example.datamanager.external.entities.LoadResult.Success"]},{"name":"class TowerBindingHandlerImpl(appDatabase: AppDatabase) : InternalObjectBindingHandler<Tower> ","description":"com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl","location":"data-manager/com.example.datamanager.external.handler.impl/-tower-binding-handler-impl/index.html","searchKeys":["TowerBindingHandlerImpl","class TowerBindingHandlerImpl(appDatabase: AppDatabase) : InternalObjectBindingHandler<Tower> ","com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl"]},{"name":"class TowerRepository(towerDao: TowerDAO) : Repository<Tower> ","description":"com.example.datamanager.database.repository.impl.TowerRepository","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/index.html","searchKeys":["TowerRepository","class TowerRepository(towerDao: TowerDAO) : Repository<Tower> ","com.example.datamanager.database.repository.impl.TowerRepository"]},{"name":"const val ADDITIONAL_TABLE_NAME: String","description":"com.example.datamanager.database.DatabaseConst.ADDITIONAL_TABLE_NAME","location":"data-manager/com.example.datamanager.database/-database-const/-a-d-d-i-t-i-o-n-a-l_-t-a-b-l-e_-n-a-m-e.html","searchKeys":["ADDITIONAL_TABLE_NAME","const val ADDITIONAL_TABLE_NAME: String","com.example.datamanager.database.DatabaseConst.ADDITIONAL_TABLE_NAME"]},{"name":"const val COORDINATE_TABLE_NAME: String","description":"com.example.datamanager.database.DatabaseConst.COORDINATE_TABLE_NAME","location":"data-manager/com.example.datamanager.database/-database-const/-c-o-o-r-d-i-n-a-t-e_-t-a-b-l-e_-n-a-m-e.html","searchKeys":["COORDINATE_TABLE_NAME","const val COORDINATE_TABLE_NAME: String","com.example.datamanager.database.DatabaseConst.COORDINATE_TABLE_NAME"]},{"name":"const val DATABASE_NAME: String","description":"com.example.datamanager.database.DatabaseConst.DATABASE_NAME","location":"data-manager/com.example.datamanager.database/-database-const/-d-a-t-a-b-a-s-e_-n-a-m-e.html","searchKeys":["DATABASE_NAME","const val DATABASE_NAME: String","com.example.datamanager.database.DatabaseConst.DATABASE_NAME"]},{"name":"const val PASSPORT_TABLE_NAME: String","description":"com.example.datamanager.database.DatabaseConst.PASSPORT_TABLE_NAME","location":"data-manager/com.example.datamanager.database/-database-const/-p-a-s-s-p-o-r-t_-t-a-b-l-e_-n-a-m-e.html","searchKeys":["PASSPORT_TABLE_NAME","const val PASSPORT_TABLE_NAME: String","com.example.datamanager.database.DatabaseConst.PASSPORT_TABLE_NAME"]},{"name":"const val TOWER_TABLE_NAME: String","description":"com.example.datamanager.database.DatabaseConst.TOWER_TABLE_NAME","location":"data-manager/com.example.datamanager.database/-database-const/-t-o-w-e-r_-t-a-b-l-e_-n-a-m-e.html","searchKeys":["TOWER_TABLE_NAME","const val TOWER_TABLE_NAME: String","com.example.datamanager.database.DatabaseConst.TOWER_TABLE_NAME"]},{"name":"data class Additional(add_id: Long, tower_id: Long, coord_id: Long?, changeDate: Date, type: String?, number: String)","description":"com.example.datamanager.database.entity.Additional","location":"data-manager/com.example.datamanager.database.entity/-additional/index.html","searchKeys":["Additional","data class Additional(add_id: Long, tower_id: Long, coord_id: Long?, changeDate: Date, type: String?, number: String)","com.example.datamanager.database.entity.Additional"]},{"name":"data class Coordinate(coord_id: Long, changeDate: Date, longitude: Double, latitude: Double)","description":"com.example.datamanager.database.entity.Coordinate","location":"data-manager/com.example.datamanager.database.entity/-coordinate/index.html","searchKeys":["Coordinate","data class Coordinate(coord_id: Long, changeDate: Date, longitude: Double, latitude: Double)","com.example.datamanager.database.entity.Coordinate"]},{"name":"data class FullSectionCertificate(passport: XMLPassportDto?, towers: List<FullTower>)","description":"com.example.datamanager.exchange.dto.FullSectionCertificate","location":"data-manager/com.example.datamanager.exchange.dto/-full-section-certificate/index.html","searchKeys":["FullSectionCertificate","data class FullSectionCertificate(passport: XMLPassportDto?, towers: List<FullTower>)","com.example.datamanager.exchange.dto.FullSectionCertificate"]},{"name":"data class FullTower(tower: XMLTowerDto?, additionals: List<XMLAdditionalDto>)","description":"com.example.datamanager.exchange.dto.FullTower","location":"data-manager/com.example.datamanager.exchange.dto/-full-tower/index.html","searchKeys":["FullTower","data class FullTower(tower: XMLTowerDto?, additionals: List<XMLAdditionalDto>)","com.example.datamanager.exchange.dto.FullTower"]},{"name":"data class Passport(passport_id: Long, changeDate: Date, sectionName: String, siteId: Long?, sectionId: String?, echName: String?, echkName: String?, locationId: String?, wayAmount: Int?, currentWay: String?, currentWayId: Long?, initialMeter: Int?, initialKm: Int?, initialPk: Int?, initialM: Int?, plotLength: Int?, suspensionAmount: Int?)","description":"com.example.datamanager.database.entity.Passport","location":"data-manager/com.example.datamanager.database.entity/-passport/index.html","searchKeys":["Passport","data class Passport(passport_id: Long, changeDate: Date, sectionName: String, siteId: Long?, sectionId: String?, echName: String?, echkName: String?, locationId: String?, wayAmount: Int?, currentWay: String?, currentWayId: Long?, initialMeter: Int?, initialKm: Int?, initialPk: Int?, initialM: Int?, plotLength: Int?, suspensionAmount: Int?)","com.example.datamanager.database.entity.Passport"]},{"name":"data class SectionCertificate(passport: XMLPassportDto?, towers: List<XMLTowerDto>)","description":"com.example.datamanager.exchange.dto.SectionCertificate","location":"data-manager/com.example.datamanager.exchange.dto/-section-certificate/index.html","searchKeys":["SectionCertificate","data class SectionCertificate(passport: XMLPassportDto?, towers: List<XMLTowerDto>)","com.example.datamanager.exchange.dto.SectionCertificate"]},{"name":"data class Tower(tower_id: Long, passport_id: Long, coord_id: Long?, changeDate: Date, idtf: String, assetNum: String, stopSeq: Int?, km: Int?, pk: Int?, m: Int?, tfType: String?, turn: String?, radius: String?, number: String, distance: Int?, zigzag: Int?, height: Int?, offset: Int?, grounded: Int?, speed: Int?, suspensionType: String?, catenary: Int?, wireType: String?, countWire: String?, gabarit: String?)","description":"com.example.datamanager.database.entity.Tower","location":"data-manager/com.example.datamanager.database.entity/-tower/index.html","searchKeys":["Tower","data class Tower(tower_id: Long, passport_id: Long, coord_id: Long?, changeDate: Date, idtf: String, assetNum: String, stopSeq: Int?, km: Int?, pk: Int?, m: Int?, tfType: String?, turn: String?, radius: String?, number: String, distance: Int?, zigzag: Int?, height: Int?, offset: Int?, grounded: Int?, speed: Int?, suspensionType: String?, catenary: Int?, wireType: String?, countWire: String?, gabarit: String?)","com.example.datamanager.database.entity.Tower"]},{"name":"data class XMLAdditionalDto(longitude: Double?, latitude: Double?, changeDate: String?, type: String?, number: String?)","description":"com.example.datamanager.exchange.dto.XMLAdditionalDto","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-additional-dto/index.html","searchKeys":["XMLAdditionalDto","data class XMLAdditionalDto(longitude: Double?, latitude: Double?, changeDate: String?, type: String?, number: String?)","com.example.datamanager.exchange.dto.XMLAdditionalDto"]},{"name":"data class XMLPassportDto(siteId: Long?, sectionName: String?, sectionId: String?, echName: String?, echkName: String?, locationId: String?, wayAmount: Int?, currentWay: String?, currentWayID: Long?, changeDate: String?, initialMeter: Int?, initialKM: Int?, initialPK: Int?, initialM: Int?, plotLength: Int?, suspensionAmount: Int?)","description":"com.example.datamanager.exchange.dto.XMLPassportDto","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/index.html","searchKeys":["XMLPassportDto","data class XMLPassportDto(siteId: Long?, sectionName: String?, sectionId: String?, echName: String?, echkName: String?, locationId: String?, wayAmount: Int?, currentWay: String?, currentWayID: Long?, changeDate: String?, initialMeter: Int?, initialKM: Int?, initialPK: Int?, initialM: Int?, plotLength: Int?, suspensionAmount: Int?)","com.example.datamanager.exchange.dto.XMLPassportDto"]},{"name":"data class XMLTowerDto(idtf: String?, assetNum: String?, stopSeq: Int?, km: Int?, pk: Int?, m: Int?, tfType: String?, turn: String?, radius: String?, number: String?, distance: Int?, zigzag: Int?, height: Int?, offset: Int?, grounded: Int?, speed: Int?, suspensionType: String?, catenary: Int?, wireType: String?, countWire: String?, longitude: Double?, latitude: Double?, gabarit: String?)","description":"com.example.datamanager.exchange.dto.XMLTowerDto","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/index.html","searchKeys":["XMLTowerDto","data class XMLTowerDto(idtf: String?, assetNum: String?, stopSeq: Int?, km: Int?, pk: Int?, m: Int?, tfType: String?, turn: String?, radius: String?, number: String?, distance: Int?, zigzag: Int?, height: Int?, offset: Int?, grounded: Int?, speed: Int?, suspensionType: String?, catenary: Int?, wireType: String?, countWire: String?, longitude: Double?, latitude: Double?, gabarit: String?)","com.example.datamanager.exchange.dto.XMLTowerDto"]},{"name":"fun <E> buildDeleteWithParametersQuery(bindObject: E): SimpleSQLiteQuery","description":"com.example.datamanager.utli.QueryBuilder.buildDeleteWithParametersQuery","location":"data-manager/com.example.datamanager.utli/-query-builder/build-delete-with-parameters-query.html","searchKeys":["buildDeleteWithParametersQuery","fun <E> buildDeleteWithParametersQuery(bindObject: E): SimpleSQLiteQuery","com.example.datamanager.utli.QueryBuilder.buildDeleteWithParametersQuery"]},{"name":"fun <E> buildSearchByAllFieldsQuery(bindObject: E): SimpleSQLiteQuery","description":"com.example.datamanager.utli.QueryBuilder.buildSearchByAllFieldsQuery","location":"data-manager/com.example.datamanager.utli/-query-builder/build-search-by-all-fields-query.html","searchKeys":["buildSearchByAllFieldsQuery","fun <E> buildSearchByAllFieldsQuery(bindObject: E): SimpleSQLiteQuery","com.example.datamanager.utli.QueryBuilder.buildSearchByAllFieldsQuery"]},{"name":"fun <T> Completed(data: List<T>?)","description":"com.example.datamanager.external.entities.RequestResult.Completed.Completed","location":"data-manager/com.example.datamanager.external.entities/-request-result/-completed/-completed.html","searchKeys":["Completed","fun <T> Completed(data: List<T>?)","com.example.datamanager.external.entities.RequestResult.Completed.Completed"]},{"name":"fun <T> Error(error: Exception, data: T? = null)","description":"com.example.datamanager.external.entities.LoadResult.Error.Error","location":"data-manager/com.example.datamanager.external.entities/-load-result/-error/-error.html","searchKeys":["Error","fun <T> Error(error: Exception, data: T? = null)","com.example.datamanager.external.entities.LoadResult.Error.Error"]},{"name":"fun <T> Loading(data: T? = null)","description":"com.example.datamanager.external.entities.LoadResult.Loading.Loading","location":"data-manager/com.example.datamanager.external.entities/-load-result/-loading/-loading.html","searchKeys":["Loading","fun <T> Loading(data: T? = null)","com.example.datamanager.external.entities.LoadResult.Loading.Loading"]},{"name":"fun <T> OnDiscovered(dataList: List<T>)","description":"com.example.datamanager.external.entities.NearestObjectListener.OnDiscovered.OnDiscovered","location":"data-manager/com.example.datamanager.external.entities/-nearest-object-listener/-on-discovered/-on-discovered.html","searchKeys":["OnDiscovered","fun <T> OnDiscovered(dataList: List<T>)","com.example.datamanager.external.entities.NearestObjectListener.OnDiscovered.OnDiscovered"]},{"name":"fun <T> Success(data: T)","description":"com.example.datamanager.external.entities.LoadResult.Success.Success","location":"data-manager/com.example.datamanager.external.entities/-load-result/-success/-success.html","searchKeys":["Success","fun <T> Success(data: T)","com.example.datamanager.external.entities.LoadResult.Success.Success"]},{"name":"fun <T> buildCountQuery(clazz: Class<T>): SimpleSQLiteQuery","description":"com.example.datamanager.utli.QueryBuilder.buildCountQuery","location":"data-manager/com.example.datamanager.utli/-query-builder/build-count-query.html","searchKeys":["buildCountQuery","fun <T> buildCountQuery(clazz: Class<T>): SimpleSQLiteQuery","com.example.datamanager.utli.QueryBuilder.buildCountQuery"]},{"name":"fun <T> buildSelectAllQuery(clazz: Class<T>): SimpleSQLiteQuery","description":"com.example.datamanager.utli.QueryBuilder.buildSelectAllQuery","location":"data-manager/com.example.datamanager.utli/-query-builder/build-select-all-query.html","searchKeys":["buildSelectAllQuery","fun <T> buildSelectAllQuery(clazz: Class<T>): SimpleSQLiteQuery","com.example.datamanager.utli.QueryBuilder.buildSelectAllQuery"]},{"name":"fun <T> buildSelectQuery(clazz: Class<T>, values: List<Pair<String, String>> = arrayListOf()): SupportSQLiteQuery","description":"com.example.datamanager.utli.QueryBuilder.buildSelectQuery","location":"data-manager/com.example.datamanager.utli/-query-builder/build-select-query.html","searchKeys":["buildSelectQuery","fun <T> buildSelectQuery(clazz: Class<T>, values: List<Pair<String, String>> = arrayListOf()): SupportSQLiteQuery","com.example.datamanager.utli.QueryBuilder.buildSelectQuery"]},{"name":"fun Additional(add_id: Long = 0, tower_id: Long = 0, coord_id: Long?, changeDate: Date = Date(), type: String?, number: String)","description":"com.example.datamanager.database.entity.Additional.Additional","location":"data-manager/com.example.datamanager.database.entity/-additional/-additional.html","searchKeys":["Additional","fun Additional(add_id: Long = 0, tower_id: Long = 0, coord_id: Long?, changeDate: Date = Date(), type: String?, number: String)","com.example.datamanager.database.entity.Additional.Additional"]},{"name":"fun AdditionalBindingHandlerImpl(appDatabase: AppDatabase)","description":"com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl.AdditionalBindingHandlerImpl","location":"data-manager/com.example.datamanager.external.handler.impl/-additional-binding-handler-impl/-additional-binding-handler-impl.html","searchKeys":["AdditionalBindingHandlerImpl","fun AdditionalBindingHandlerImpl(appDatabase: AppDatabase)","com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl.AdditionalBindingHandlerImpl"]},{"name":"fun AdditionalRepository(additionalDAO: AdditionalDAO)","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.AdditionalRepository","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/-additional-repository.html","searchKeys":["AdditionalRepository","fun AdditionalRepository(additionalDAO: AdditionalDAO)","com.example.datamanager.database.repository.impl.AdditionalRepository.AdditionalRepository"]},{"name":"fun AppDatabase()","description":"com.example.datamanager.database.AppDatabase.AppDatabase","location":"data-manager/com.example.datamanager.database/-app-database/-app-database.html","searchKeys":["AppDatabase","fun AppDatabase()","com.example.datamanager.database.AppDatabase.AppDatabase"]},{"name":"fun Canceled()","description":"com.example.datamanager.external.entities.RequestResult.Canceled.Canceled","location":"data-manager/com.example.datamanager.external.entities/-request-result/-canceled/-canceled.html","searchKeys":["Canceled","fun Canceled()","com.example.datamanager.external.entities.RequestResult.Canceled.Canceled"]},{"name":"fun Canceled()","description":"com.example.datamanager.external.entities.WorkResult.Canceled.Canceled","location":"data-manager/com.example.datamanager.external.entities/-work-result/-canceled/-canceled.html","searchKeys":["Canceled","fun Canceled()","com.example.datamanager.external.entities.WorkResult.Canceled.Canceled"]},{"name":"fun Completed()","description":"com.example.datamanager.external.entities.WorkResult.Completed.Completed","location":"data-manager/com.example.datamanager.external.entities/-work-result/-completed/-completed.html","searchKeys":["Completed","fun Completed()","com.example.datamanager.external.entities.WorkResult.Completed.Completed"]},{"name":"fun Converter()","description":"com.example.datamanager.database.converter.Converter.Converter","location":"data-manager/com.example.datamanager.database.converter/-converter/-converter.html","searchKeys":["Converter","fun Converter()","com.example.datamanager.database.converter.Converter.Converter"]},{"name":"fun Coordinate(coord_id: Long = 0, changeDate: Date = Date(), longitude: Double, latitude: Double)","description":"com.example.datamanager.database.entity.Coordinate.Coordinate","location":"data-manager/com.example.datamanager.database.entity/-coordinate/-coordinate.html","searchKeys":["Coordinate","fun Coordinate(coord_id: Long = 0, changeDate: Date = Date(), longitude: Double, latitude: Double)","com.example.datamanager.database.entity.Coordinate.Coordinate"]},{"name":"fun CoordinateRepository(coordinateDAO: CoordinateDAO)","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.CoordinateRepository","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/-coordinate-repository.html","searchKeys":["CoordinateRepository","fun CoordinateRepository(coordinateDAO: CoordinateDAO)","com.example.datamanager.database.repository.impl.CoordinateRepository.CoordinateRepository"]},{"name":"fun DataManager(database: AppDatabase, searchLocationObjectManager: SearchLocationObjectManager<Any>)","description":"com.example.datamanager.DataManager.DataManager","location":"data-manager/com.example.datamanager/-data-manager/-data-manager.html","searchKeys":["DataManager","fun DataManager(database: AppDatabase, searchLocationObjectManager: SearchLocationObjectManager<Any>)","com.example.datamanager.DataManager.DataManager"]},{"name":"fun Error()","description":"com.example.datamanager.external.entities.WorkResult.Error.Error","location":"data-manager/com.example.datamanager.external.entities/-work-result/-error/-error.html","searchKeys":["Error","fun Error()","com.example.datamanager.external.entities.WorkResult.Error.Error"]},{"name":"fun Error(error: Exception)","description":"com.example.datamanager.external.entities.RequestResult.Error.Error","location":"data-manager/com.example.datamanager.external.entities/-request-result/-error/-error.html","searchKeys":["Error","fun Error(error: Exception)","com.example.datamanager.external.entities.RequestResult.Error.Error"]},{"name":"fun ExportFileManagerImpl(appDatabase: AppDatabase)","description":"com.example.datamanager.exchange.impl.ExportFileManagerImpl.ExportFileManagerImpl","location":"data-manager/com.example.datamanager.exchange.impl/-export-file-manager-impl/-export-file-manager-impl.html","searchKeys":["ExportFileManagerImpl","fun ExportFileManagerImpl(appDatabase: AppDatabase)","com.example.datamanager.exchange.impl.ExportFileManagerImpl.ExportFileManagerImpl"]},{"name":"fun FullSectionCertificate(passport: XMLPassportDto? = null, towers: List<FullTower> = mutableListOf())","description":"com.example.datamanager.exchange.dto.FullSectionCertificate.FullSectionCertificate","location":"data-manager/com.example.datamanager.exchange.dto/-full-section-certificate/-full-section-certificate.html","searchKeys":["FullSectionCertificate","fun FullSectionCertificate(passport: XMLPassportDto? = null, towers: List<FullTower> = mutableListOf())","com.example.datamanager.exchange.dto.FullSectionCertificate.FullSectionCertificate"]},{"name":"fun FullTower(tower: XMLTowerDto? = null, additionals: List<XMLAdditionalDto> = mutableListOf())","description":"com.example.datamanager.exchange.dto.FullTower.FullTower","location":"data-manager/com.example.datamanager.exchange.dto/-full-tower/-full-tower.html","searchKeys":["FullTower","fun FullTower(tower: XMLTowerDto? = null, additionals: List<XMLAdditionalDto> = mutableListOf())","com.example.datamanager.exchange.dto.FullTower.FullTower"]},{"name":"fun ImportFileManagerImpl(appDatabase: AppDatabase)","description":"com.example.datamanager.exchange.impl.ImportFileManagerImpl.ImportFileManagerImpl","location":"data-manager/com.example.datamanager.exchange.impl/-import-file-manager-impl/-import-file-manager-impl.html","searchKeys":["ImportFileManagerImpl","fun ImportFileManagerImpl(appDatabase: AppDatabase)","com.example.datamanager.exchange.impl.ImportFileManagerImpl.ImportFileManagerImpl"]},{"name":"fun Loading()","description":"com.example.datamanager.external.entities.RequestResult.Loading.Loading","location":"data-manager/com.example.datamanager.external.entities/-request-result/-loading/-loading.html","searchKeys":["Loading","fun Loading()","com.example.datamanager.external.entities.RequestResult.Loading.Loading"]},{"name":"fun Loading()","description":"com.example.datamanager.external.entities.WorkResult.Loading.Loading","location":"data-manager/com.example.datamanager.external.entities/-work-result/-loading/-loading.html","searchKeys":["Loading","fun Loading()","com.example.datamanager.external.entities.WorkResult.Loading.Loading"]},{"name":"fun ObjectBindingHandlerImpl(appDatabase: AppDatabase)","description":"com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl.ObjectBindingHandlerImpl","location":"data-manager/com.example.datamanager.external.handler.impl/-object-binding-handler-impl/-object-binding-handler-impl.html","searchKeys":["ObjectBindingHandlerImpl","fun ObjectBindingHandlerImpl(appDatabase: AppDatabase)","com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl.ObjectBindingHandlerImpl"]},{"name":"fun Passport(passport_id: Long = 0, changeDate: Date = Date(), sectionName: String, siteId: Long? = null, sectionId: String? = null, echName: String? = null, echkName: String? = null, locationId: String? = null, wayAmount: Int? = null, currentWay: String? = null, currentWayId: Long? = null, initialMeter: Int? = null, initialKm: Int? = null, initialPk: Int? = null, initialM: Int? = null, plotLength: Int? = null, suspensionAmount: Int? = null)","description":"com.example.datamanager.database.entity.Passport.Passport","location":"data-manager/com.example.datamanager.database.entity/-passport/-passport.html","searchKeys":["Passport","fun Passport(passport_id: Long = 0, changeDate: Date = Date(), sectionName: String, siteId: Long? = null, sectionId: String? = null, echName: String? = null, echkName: String? = null, locationId: String? = null, wayAmount: Int? = null, currentWay: String? = null, currentWayId: Long? = null, initialMeter: Int? = null, initialKm: Int? = null, initialPk: Int? = null, initialM: Int? = null, plotLength: Int? = null, suspensionAmount: Int? = null)","com.example.datamanager.database.entity.Passport.Passport"]},{"name":"fun PassportRepository(passportDAO: PassportDAO)","description":"com.example.datamanager.database.repository.impl.PassportRepository.PassportRepository","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/-passport-repository.html","searchKeys":["PassportRepository","fun PassportRepository(passportDAO: PassportDAO)","com.example.datamanager.database.repository.impl.PassportRepository.PassportRepository"]},{"name":"fun Progress(progress: Int)","description":"com.example.datamanager.external.entities.RequestResult.Progress.Progress","location":"data-manager/com.example.datamanager.external.entities/-request-result/-progress/-progress.html","searchKeys":["Progress","fun Progress(progress: Int)","com.example.datamanager.external.entities.RequestResult.Progress.Progress"]},{"name":"fun Progress(progress: Int)","description":"com.example.datamanager.external.entities.WorkResult.Progress.Progress","location":"data-manager/com.example.datamanager.external.entities/-work-result/-progress/-progress.html","searchKeys":["Progress","fun Progress(progress: Int)","com.example.datamanager.external.entities.WorkResult.Progress.Progress"]},{"name":"fun RepositoryProviderImpl(database: AppDatabase)","description":"com.example.datamanager.database.repository.impl.RepositoryProviderImpl.RepositoryProviderImpl","location":"data-manager/com.example.datamanager.database.repository.impl/-repository-provider-impl/-repository-provider-impl.html","searchKeys":["RepositoryProviderImpl","fun RepositoryProviderImpl(database: AppDatabase)","com.example.datamanager.database.repository.impl.RepositoryProviderImpl.RepositoryProviderImpl"]},{"name":"fun SearchLocationObjectManagerImpl(locationManager: LocationManager, context: Context, appDatabase: AppDatabase)","description":"com.example.datamanager.search.impl.SearchLocationObjectManagerImpl.SearchLocationObjectManagerImpl","location":"data-manager/com.example.datamanager.search.impl/-search-location-object-manager-impl/-search-location-object-manager-impl.html","searchKeys":["SearchLocationObjectManagerImpl","fun SearchLocationObjectManagerImpl(locationManager: LocationManager, context: Context, appDatabase: AppDatabase)","com.example.datamanager.search.impl.SearchLocationObjectManagerImpl.SearchLocationObjectManagerImpl"]},{"name":"fun SectionCertificate(passport: XMLPassportDto? = null, towers: List<XMLTowerDto> = mutableListOf())","description":"com.example.datamanager.exchange.dto.SectionCertificate.SectionCertificate","location":"data-manager/com.example.datamanager.exchange.dto/-section-certificate/-section-certificate.html","searchKeys":["SectionCertificate","fun SectionCertificate(passport: XMLPassportDto? = null, towers: List<XMLTowerDto> = mutableListOf())","com.example.datamanager.exchange.dto.SectionCertificate.SectionCertificate"]},{"name":"fun Tower(tower_id: Long = 0, passport_id: Long = 0, coord_id: Long? = null, changeDate: Date = Date(), idtf: String, assetNum: String, stopSeq: Int? = null, km: Int? = null, pk: Int? = null, m: Int? = null, tfType: String? = null, turn: String? = null, radius: String? = null, number: String, distance: Int? = null, zigzag: Int? = null, height: Int? = null, offset: Int? = null, grounded: Int? = null, speed: Int? = null, suspensionType: String? = null, catenary: Int? = null, wireType: String? = null, countWire: String? = null, gabarit: String? = null)","description":"com.example.datamanager.database.entity.Tower.Tower","location":"data-manager/com.example.datamanager.database.entity/-tower/-tower.html","searchKeys":["Tower","fun Tower(tower_id: Long = 0, passport_id: Long = 0, coord_id: Long? = null, changeDate: Date = Date(), idtf: String, assetNum: String, stopSeq: Int? = null, km: Int? = null, pk: Int? = null, m: Int? = null, tfType: String? = null, turn: String? = null, radius: String? = null, number: String, distance: Int? = null, zigzag: Int? = null, height: Int? = null, offset: Int? = null, grounded: Int? = null, speed: Int? = null, suspensionType: String? = null, catenary: Int? = null, wireType: String? = null, countWire: String? = null, gabarit: String? = null)","com.example.datamanager.database.entity.Tower.Tower"]},{"name":"fun TowerBindingHandlerImpl(appDatabase: AppDatabase)","description":"com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl.TowerBindingHandlerImpl","location":"data-manager/com.example.datamanager.external.handler.impl/-tower-binding-handler-impl/-tower-binding-handler-impl.html","searchKeys":["TowerBindingHandlerImpl","fun TowerBindingHandlerImpl(appDatabase: AppDatabase)","com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl.TowerBindingHandlerImpl"]},{"name":"fun TowerRepository(towerDao: TowerDAO)","description":"com.example.datamanager.database.repository.impl.TowerRepository.TowerRepository","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/-tower-repository.html","searchKeys":["TowerRepository","fun TowerRepository(towerDao: TowerDAO)","com.example.datamanager.database.repository.impl.TowerRepository.TowerRepository"]},{"name":"fun XMLAdditionalDto(longitude: Double? = null, latitude: Double? = null, changeDate: String? = null, type: String? = null, number: String? = null)","description":"com.example.datamanager.exchange.dto.XMLAdditionalDto.XMLAdditionalDto","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-additional-dto/-x-m-l-additional-dto.html","searchKeys":["XMLAdditionalDto","fun XMLAdditionalDto(longitude: Double? = null, latitude: Double? = null, changeDate: String? = null, type: String? = null, number: String? = null)","com.example.datamanager.exchange.dto.XMLAdditionalDto.XMLAdditionalDto"]},{"name":"fun XMLPassportDto(siteId: Long? = null, sectionName: String? = null, sectionId: String? = null, echName: String? = null, echkName: String? = null, locationId: String? = null, wayAmount: Int? = null, currentWay: String? = null, currentWayID: Long? = null, changeDate: String? = null, initialMeter: Int? = null, initialKM: Int? = null, initialPK: Int? = null, initialM: Int? = null, plotLength: Int? = null, suspensionAmount: Int? = null)","description":"com.example.datamanager.exchange.dto.XMLPassportDto.XMLPassportDto","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/-x-m-l-passport-dto.html","searchKeys":["XMLPassportDto","fun XMLPassportDto(siteId: Long? = null, sectionName: String? = null, sectionId: String? = null, echName: String? = null, echkName: String? = null, locationId: String? = null, wayAmount: Int? = null, currentWay: String? = null, currentWayID: Long? = null, changeDate: String? = null, initialMeter: Int? = null, initialKM: Int? = null, initialPK: Int? = null, initialM: Int? = null, plotLength: Int? = null, suspensionAmount: Int? = null)","com.example.datamanager.exchange.dto.XMLPassportDto.XMLPassportDto"]},{"name":"fun XMLTowerDto(idtf: String? = null, assetNum: String? = null, stopSeq: Int? = null, km: Int? = null, pk: Int? = null, m: Int? = null, tfType: String? = null, turn: String? = null, radius: String? = null, number: String? = null, distance: Int? = null, zigzag: Int? = null, height: Int? = null, offset: Int? = null, grounded: Int? = null, speed: Int? = null, suspensionType: String? = null, catenary: Int? = null, wireType: String? = null, countWire: String? = null, longitude: Double? = null, latitude: Double? = null, gabarit: String? = null)","description":"com.example.datamanager.exchange.dto.XMLTowerDto.XMLTowerDto","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/-x-m-l-tower-dto.html","searchKeys":["XMLTowerDto","fun XMLTowerDto(idtf: String? = null, assetNum: String? = null, stopSeq: Int? = null, km: Int? = null, pk: Int? = null, m: Int? = null, tfType: String? = null, turn: String? = null, radius: String? = null, number: String? = null, distance: Int? = null, zigzag: Int? = null, height: Int? = null, offset: Int? = null, grounded: Int? = null, speed: Int? = null, suspensionType: String? = null, catenary: Int? = null, wireType: String? = null, countWire: String? = null, longitude: Double? = null, latitude: Double? = null, gabarit: String? = null)","com.example.datamanager.exchange.dto.XMLTowerDto.XMLTowerDto"]},{"name":"fun addError(error: Exception)","description":"com.example.datamanager.external.entities.WorkResult.Error.addError","location":"data-manager/com.example.datamanager.external.entities/-work-result/-error/add-error.html","searchKeys":["addError","fun addError(error: Exception)","com.example.datamanager.external.entities.WorkResult.Error.addError"]},{"name":"fun addErrors(errors: MutableList<Exception>)","description":"com.example.datamanager.external.entities.WorkResult.Error.addErrors","location":"data-manager/com.example.datamanager.external.entities/-work-result/-error/add-errors.html","searchKeys":["addErrors","fun addErrors(errors: MutableList<Exception>)","com.example.datamanager.external.entities.WorkResult.Error.addErrors"]},{"name":"fun build(): AppDatabase","description":"com.example.datamanager.database.AppDatabase.Builder.build","location":"data-manager/com.example.datamanager.database/-app-database/-builder/build.html","searchKeys":["build","fun build(): AppDatabase","com.example.datamanager.database.AppDatabase.Builder.build"]},{"name":"fun build(): DataManager","description":"com.example.datamanager.DataManager.Builder.build","location":"data-manager/com.example.datamanager/-data-manager/-builder/build.html","searchKeys":["build","fun build(): DataManager","com.example.datamanager.DataManager.Builder.build"]},{"name":"fun buildCoordInRadiusQuery(longitude: Double, latitude: Double, radius: Int): SimpleSQLiteQuery","description":"com.example.datamanager.utli.QueryBuilder.buildCoordInRadiusQuery","location":"data-manager/com.example.datamanager.utli/-query-builder/build-coord-in-radius-query.html","searchKeys":["buildCoordInRadiusQuery","fun buildCoordInRadiusQuery(longitude: Double, latitude: Double, radius: Int): SimpleSQLiteQuery","com.example.datamanager.utli.QueryBuilder.buildCoordInRadiusQuery"]},{"name":"fun buildLastTimestampQuery(): SimpleSQLiteQuery","description":"com.example.datamanager.utli.QueryBuilder.buildLastTimestampQuery","location":"data-manager/com.example.datamanager.utli/-query-builder/build-last-timestamp-query.html","searchKeys":["buildLastTimestampQuery","fun buildLastTimestampQuery(): SimpleSQLiteQuery","com.example.datamanager.utli.QueryBuilder.buildLastTimestampQuery"]},{"name":"fun clearNumber(number: String): String","description":"com.example.datamanager.utli.Utils.clearNumber","location":"data-manager/com.example.datamanager.utli/-utils/clear-number.html","searchKeys":["clearNumber","fun clearNumber(number: String): String","com.example.datamanager.utli.Utils.clearNumber"]},{"name":"fun findAllByPassportId(passport_id: Long): List<Tower>","description":"com.example.datamanager.database.repository.impl.TowerRepository.findAllByPassportId","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/find-all-by-passport-id.html","searchKeys":["findAllByPassportId","fun findAllByPassportId(passport_id: Long): List<Tower>","com.example.datamanager.database.repository.impl.TowerRepository.findAllByPassportId"]},{"name":"fun findAllByTowerId(tower_id: Long): List<Additional>","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.findAllByTowerId","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/find-all-by-tower-id.html","searchKeys":["findAllByTowerId","fun findAllByTowerId(tower_id: Long): List<Additional>","com.example.datamanager.database.repository.impl.AdditionalRepository.findAllByTowerId"]},{"name":"fun fromAdditionalToXml(additional: Additional, coordinate: Coordinate?): XMLAdditionalDto","description":"com.example.datamanager.database.converter.Converter.Companion.fromAdditionalToXml","location":"data-manager/com.example.datamanager.database.converter/-converter/-companion/from-additional-to-xml.html","searchKeys":["fromAdditionalToXml","fun fromAdditionalToXml(additional: Additional, coordinate: Coordinate?): XMLAdditionalDto","com.example.datamanager.database.converter.Converter.Companion.fromAdditionalToXml"]},{"name":"fun fromPassportToXml(passport: Passport): XMLPassportDto","description":"com.example.datamanager.database.converter.Converter.Companion.fromPassportToXml","location":"data-manager/com.example.datamanager.database.converter/-converter/-companion/from-passport-to-xml.html","searchKeys":["fromPassportToXml","fun fromPassportToXml(passport: Passport): XMLPassportDto","com.example.datamanager.database.converter.Converter.Companion.fromPassportToXml"]},{"name":"fun fromStringToDate(strDate: String): Date","description":"com.example.datamanager.database.converter.Converter.Companion.fromStringToDate","location":"data-manager/com.example.datamanager.database.converter/-converter/-companion/from-string-to-date.html","searchKeys":["fromStringToDate","fun fromStringToDate(strDate: String): Date","com.example.datamanager.database.converter.Converter.Companion.fromStringToDate"]},{"name":"fun fromTowerToXml(tower: Tower, coordinate: Coordinate?): XMLTowerDto","description":"com.example.datamanager.database.converter.Converter.Companion.fromTowerToXml","location":"data-manager/com.example.datamanager.database.converter/-converter/-companion/from-tower-to-xml.html","searchKeys":["fromTowerToXml","fun fromTowerToXml(tower: Tower, coordinate: Coordinate?): XMLTowerDto","com.example.datamanager.database.converter.Converter.Companion.fromTowerToXml"]},{"name":"fun fromXmlToAdditional(dto: XMLAdditionalDto, tower_id: Long, coord_id: Long?): Additional","description":"com.example.datamanager.database.converter.Converter.Companion.fromXmlToAdditional","location":"data-manager/com.example.datamanager.database.converter/-converter/-companion/from-xml-to-additional.html","searchKeys":["fromXmlToAdditional","fun fromXmlToAdditional(dto: XMLAdditionalDto, tower_id: Long, coord_id: Long?): Additional","com.example.datamanager.database.converter.Converter.Companion.fromXmlToAdditional"]},{"name":"fun fromXmlToPassport(dto: XMLPassportDto): Passport","description":"com.example.datamanager.database.converter.Converter.Companion.fromXmlToPassport","location":"data-manager/com.example.datamanager.database.converter/-converter/-companion/from-xml-to-passport.html","searchKeys":["fromXmlToPassport","fun fromXmlToPassport(dto: XMLPassportDto): Passport","com.example.datamanager.database.converter.Converter.Companion.fromXmlToPassport"]},{"name":"fun fromXmlToTower(dto: XMLTowerDto, coord_id: Long?): Tower","description":"com.example.datamanager.database.converter.Converter.Companion.fromXmlToTower","location":"data-manager/com.example.datamanager.database.converter/-converter/-companion/from-xml-to-tower.html","searchKeys":["fromXmlToTower","fun fromXmlToTower(dto: XMLTowerDto, coord_id: Long?): Tower","com.example.datamanager.database.converter.Converter.Companion.fromXmlToTower"]},{"name":"fun getCoordinateByLongitudeAndLatitude(longitude: Double, latitude: Double): Coordinate?","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.getCoordinateByLongitudeAndLatitude","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/get-coordinate-by-longitude-and-latitude.html","searchKeys":["getCoordinateByLongitudeAndLatitude","fun getCoordinateByLongitudeAndLatitude(longitude: Double, latitude: Double): Coordinate?","com.example.datamanager.database.repository.impl.CoordinateRepository.getCoordinateByLongitudeAndLatitude"]},{"name":"fun getDateFromTimestamp(value: Long?): Date?","description":"com.example.datamanager.database.converter.Converter.getDateFromTimestamp","location":"data-manager/com.example.datamanager.database.converter/-converter/get-date-from-timestamp.html","searchKeys":["getDateFromTimestamp","fun getDateFromTimestamp(value: Long?): Date?","com.example.datamanager.database.converter.Converter.getDateFromTimestamp"]},{"name":"fun getTimestampFromDate(value: Date?): Long?","description":"com.example.datamanager.database.converter.Converter.getTimestampFromDate","location":"data-manager/com.example.datamanager.database.converter/-converter/get-timestamp-from-date.html","searchKeys":["getTimestampFromDate","fun getTimestampFromDate(value: Date?): Long?","com.example.datamanager.database.converter.Converter.getTimestampFromDate"]},{"name":"fun initialize(context: Context): AppDatabase.Builder","description":"com.example.datamanager.database.AppDatabase.Builder.initialize","location":"data-manager/com.example.datamanager.database/-app-database/-builder/initialize.html","searchKeys":["initialize","fun initialize(context: Context): AppDatabase.Builder","com.example.datamanager.database.AppDatabase.Builder.initialize"]},{"name":"fun initialize(context: Context, locationManager: LocationManager): DataManager.Builder","description":"com.example.datamanager.DataManager.Builder.initialize","location":"data-manager/com.example.datamanager/-data-manager/-builder/initialize.html","searchKeys":["initialize","fun initialize(context: Context, locationManager: LocationManager): DataManager.Builder","com.example.datamanager.DataManager.Builder.initialize"]},{"name":"interface AdditionalDAO : BaseDAO<Additional> ","description":"com.example.datamanager.database.dao.AdditionalDAO","location":"data-manager/com.example.datamanager.database.dao/-additional-d-a-o/index.html","searchKeys":["AdditionalDAO","interface AdditionalDAO : BaseDAO<Additional> ","com.example.datamanager.database.dao.AdditionalDAO"]},{"name":"interface BaseDAO<T>","description":"com.example.datamanager.database.dao.BaseDAO","location":"data-manager/com.example.datamanager.database.dao/-base-d-a-o/index.html","searchKeys":["BaseDAO","interface BaseDAO<T>","com.example.datamanager.database.dao.BaseDAO"]},{"name":"interface CoordinateDAO : BaseDAO<Coordinate> ","description":"com.example.datamanager.database.dao.CoordinateDAO","location":"data-manager/com.example.datamanager.database.dao/-coordinate-d-a-o/index.html","searchKeys":["CoordinateDAO","interface CoordinateDAO : BaseDAO<Coordinate> ","com.example.datamanager.database.dao.CoordinateDAO"]},{"name":"interface ExportFileManager","description":"com.example.datamanager.exchange.ExportFileManager","location":"data-manager/com.example.datamanager.exchange/-export-file-manager/index.html","searchKeys":["ExportFileManager","interface ExportFileManager","com.example.datamanager.exchange.ExportFileManager"]},{"name":"interface IPassportManager<T> : ImportFileManager, ExportFileManager, SearchLocationObjectManager<T> , ObjectBindingHandler, RepositoryProvider","description":"com.example.datamanager.IPassportManager","location":"data-manager/com.example.datamanager/-i-passport-manager/index.html","searchKeys":["IPassportManager","interface IPassportManager<T> : ImportFileManager, ExportFileManager, SearchLocationObjectManager<T> , ObjectBindingHandler, RepositoryProvider","com.example.datamanager.IPassportManager"]},{"name":"interface ImportFileManager","description":"com.example.datamanager.exchange.ImportFileManager","location":"data-manager/com.example.datamanager.exchange/-import-file-manager/index.html","searchKeys":["ImportFileManager","interface ImportFileManager","com.example.datamanager.exchange.ImportFileManager"]},{"name":"interface InternalObjectBindingHandler<E>","description":"com.example.datamanager.external.handler.InternalObjectBindingHandler","location":"data-manager/com.example.datamanager.external.handler/-internal-object-binding-handler/index.html","searchKeys":["InternalObjectBindingHandler","interface InternalObjectBindingHandler<E>","com.example.datamanager.external.handler.InternalObjectBindingHandler"]},{"name":"interface ObjectBindingHandler","description":"com.example.datamanager.external.handler.ObjectBindingHandler","location":"data-manager/com.example.datamanager.external.handler/-object-binding-handler/index.html","searchKeys":["ObjectBindingHandler","interface ObjectBindingHandler","com.example.datamanager.external.handler.ObjectBindingHandler"]},{"name":"interface PassportDAO : BaseDAO<Passport> ","description":"com.example.datamanager.database.dao.PassportDAO","location":"data-manager/com.example.datamanager.database.dao/-passport-d-a-o/index.html","searchKeys":["PassportDAO","interface PassportDAO : BaseDAO<Passport> ","com.example.datamanager.database.dao.PassportDAO"]},{"name":"interface Repository<T>","description":"com.example.datamanager.database.repository.Repository","location":"data-manager/com.example.datamanager.database.repository/-repository/index.html","searchKeys":["Repository","interface Repository<T>","com.example.datamanager.database.repository.Repository"]},{"name":"interface RepositoryProvider","description":"com.example.datamanager.database.repository.RepositoryProvider","location":"data-manager/com.example.datamanager.database.repository/-repository-provider/index.html","searchKeys":["RepositoryProvider","interface RepositoryProvider","com.example.datamanager.database.repository.RepositoryProvider"]},{"name":"interface SearchLocationObjectManager<T>","description":"com.example.datamanager.search.SearchLocationObjectManager","location":"data-manager/com.example.datamanager.search/-search-location-object-manager/index.html","searchKeys":["SearchLocationObjectManager","interface SearchLocationObjectManager<T>","com.example.datamanager.search.SearchLocationObjectManager"]},{"name":"interface TowerDAO : BaseDAO<Tower> ","description":"com.example.datamanager.database.dao.TowerDAO","location":"data-manager/com.example.datamanager.database.dao/-tower-d-a-o/index.html","searchKeys":["TowerDAO","interface TowerDAO : BaseDAO<Tower> ","com.example.datamanager.database.dao.TowerDAO"]},{"name":"object Builder","description":"com.example.datamanager.DataManager.Builder","location":"data-manager/com.example.datamanager/-data-manager/-builder/index.html","searchKeys":["Builder","object Builder","com.example.datamanager.DataManager.Builder"]},{"name":"object Builder","description":"com.example.datamanager.database.AppDatabase.Builder","location":"data-manager/com.example.datamanager.database/-app-database/-builder/index.html","searchKeys":["Builder","object Builder","com.example.datamanager.database.AppDatabase.Builder"]},{"name":"object Companion","description":"com.example.datamanager.database.converter.Converter.Companion","location":"data-manager/com.example.datamanager.database.converter/-converter/-companion/index.html","searchKeys":["Companion","object Companion","com.example.datamanager.database.converter.Converter.Companion"]},{"name":"object DatabaseConst","description":"com.example.datamanager.database.DatabaseConst","location":"data-manager/com.example.datamanager.database/-database-const/index.html","searchKeys":["DatabaseConst","object DatabaseConst","com.example.datamanager.database.DatabaseConst"]},{"name":"object QueryBuilder","description":"com.example.datamanager.utli.QueryBuilder","location":"data-manager/com.example.datamanager.utli/-query-builder/index.html","searchKeys":["QueryBuilder","object QueryBuilder","com.example.datamanager.utli.QueryBuilder"]},{"name":"object Utils","description":"com.example.datamanager.utli.Utils","location":"data-manager/com.example.datamanager.utli/-utils/index.html","searchKeys":["Utils","object Utils","com.example.datamanager.utli.Utils"]},{"name":"open override fun <B : Any> export(bindingEntity: B, destinationPath: File): LiveData<WorkResult>","description":"com.example.datamanager.DataManager.export","location":"data-manager/com.example.datamanager/-data-manager/export.html","searchKeys":["export","open override fun <B : Any> export(bindingEntity: B, destinationPath: File): LiveData<WorkResult>","com.example.datamanager.DataManager.export"]},{"name":"open override fun <B : Any> export(bindingEntity: B, destinationPath: File): LiveData<WorkResult>","description":"com.example.datamanager.exchange.impl.ExportFileManagerImpl.export","location":"data-manager/com.example.datamanager.exchange.impl/-export-file-manager-impl/export.html","searchKeys":["export","open override fun <B : Any> export(bindingEntity: B, destinationPath: File): LiveData<WorkResult>","com.example.datamanager.exchange.impl.ExportFileManagerImpl.export"]},{"name":"open override fun <T> getActualObject(clazz: Class<T>): LiveData<LoadResult<T>>","description":"com.example.datamanager.DataManager.getActualObject","location":"data-manager/com.example.datamanager/-data-manager/get-actual-object.html","searchKeys":["getActualObject","open override fun <T> getActualObject(clazz: Class<T>): LiveData<LoadResult<T>>","com.example.datamanager.DataManager.getActualObject"]},{"name":"open override fun <T> getActualObject(clazz: Class<T>): LiveData<LoadResult<T>>","description":"com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl.getActualObject","location":"data-manager/com.example.datamanager.external.handler.impl/-object-binding-handler-impl/get-actual-object.html","searchKeys":["getActualObject","open override fun <T> getActualObject(clazz: Class<T>): LiveData<LoadResult<T>>","com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl.getActualObject"]},{"name":"open override fun <T> getRepository(clazz: Class<T>): Repository<T>","description":"com.example.datamanager.DataManager.getRepository","location":"data-manager/com.example.datamanager/-data-manager/get-repository.html","searchKeys":["getRepository","open override fun <T> getRepository(clazz: Class<T>): Repository<T>","com.example.datamanager.DataManager.getRepository"]},{"name":"open override fun <T> getRepository(clazz: Class<T>): Repository<T>","description":"com.example.datamanager.database.repository.impl.RepositoryProviderImpl.getRepository","location":"data-manager/com.example.datamanager.database.repository.impl/-repository-provider-impl/get-repository.html","searchKeys":["getRepository","open override fun <T> getRepository(clazz: Class<T>): Repository<T>","com.example.datamanager.database.repository.impl.RepositoryProviderImpl.getRepository"]},{"name":"open override fun <T> nextObject(clazz: Class<T>): LiveData<LoadResult<T>>","description":"com.example.datamanager.DataManager.nextObject","location":"data-manager/com.example.datamanager/-data-manager/next-object.html","searchKeys":["nextObject","open override fun <T> nextObject(clazz: Class<T>): LiveData<LoadResult<T>>","com.example.datamanager.DataManager.nextObject"]},{"name":"open override fun <T> nextObject(clazz: Class<T>): LiveData<LoadResult<T>>","description":"com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl.nextObject","location":"data-manager/com.example.datamanager.external.handler.impl/-object-binding-handler-impl/next-object.html","searchKeys":["nextObject","open override fun <T> nextObject(clazz: Class<T>): LiveData<LoadResult<T>>","com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl.nextObject"]},{"name":"open override fun <T> previousObject(clazz: Class<T>): LiveData<LoadResult<T>>","description":"com.example.datamanager.DataManager.previousObject","location":"data-manager/com.example.datamanager/-data-manager/previous-object.html","searchKeys":["previousObject","open override fun <T> previousObject(clazz: Class<T>): LiveData<LoadResult<T>>","com.example.datamanager.DataManager.previousObject"]},{"name":"open override fun <T> previousObject(clazz: Class<T>): LiveData<LoadResult<T>>","description":"com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl.previousObject","location":"data-manager/com.example.datamanager.external.handler.impl/-object-binding-handler-impl/previous-object.html","searchKeys":["previousObject","open override fun <T> previousObject(clazz: Class<T>): LiveData<LoadResult<T>>","com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl.previousObject"]},{"name":"open override fun <T> setObjectBinding(objectBinding: T): LiveData<LoadResult<T>>","description":"com.example.datamanager.DataManager.setObjectBinding","location":"data-manager/com.example.datamanager/-data-manager/set-object-binding.html","searchKeys":["setObjectBinding","open override fun <T> setObjectBinding(objectBinding: T): LiveData<LoadResult<T>>","com.example.datamanager.DataManager.setObjectBinding"]},{"name":"open override fun <T> setObjectBinding(objectBinding: T): MutableLiveData<LoadResult<T>>","description":"com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl.setObjectBinding","location":"data-manager/com.example.datamanager.external.handler.impl/-object-binding-handler-impl/set-object-binding.html","searchKeys":["setObjectBinding","open override fun <T> setObjectBinding(objectBinding: T): MutableLiveData<LoadResult<T>>","com.example.datamanager.external.handler.impl.ObjectBindingHandlerImpl.setObjectBinding"]},{"name":"open override fun add(addObject: Additional): Long","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.add","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/add.html","searchKeys":["add","open override fun add(addObject: Additional): Long","com.example.datamanager.database.repository.impl.AdditionalRepository.add"]},{"name":"open override fun add(addObject: Coordinate): Long","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.add","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/add.html","searchKeys":["add","open override fun add(addObject: Coordinate): Long","com.example.datamanager.database.repository.impl.CoordinateRepository.add"]},{"name":"open override fun add(addObject: Passport): Long","description":"com.example.datamanager.database.repository.impl.PassportRepository.add","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/add.html","searchKeys":["add","open override fun add(addObject: Passport): Long","com.example.datamanager.database.repository.impl.PassportRepository.add"]},{"name":"open override fun add(addObject: Tower): Long","description":"com.example.datamanager.database.repository.impl.TowerRepository.add","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/add.html","searchKeys":["add","open override fun add(addObject: Tower): Long","com.example.datamanager.database.repository.impl.TowerRepository.add"]},{"name":"open override fun addAll(addObjects: List<Additional>)","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.addAll","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/add-all.html","searchKeys":["addAll","open override fun addAll(addObjects: List<Additional>)","com.example.datamanager.database.repository.impl.AdditionalRepository.addAll"]},{"name":"open override fun addAll(addObjects: List<Coordinate>)","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.addAll","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/add-all.html","searchKeys":["addAll","open override fun addAll(addObjects: List<Coordinate>)","com.example.datamanager.database.repository.impl.CoordinateRepository.addAll"]},{"name":"open override fun addAll(addObjects: List<Passport>)","description":"com.example.datamanager.database.repository.impl.PassportRepository.addAll","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/add-all.html","searchKeys":["addAll","open override fun addAll(addObjects: List<Passport>)","com.example.datamanager.database.repository.impl.PassportRepository.addAll"]},{"name":"open override fun addAll(addObjects: List<Tower>)","description":"com.example.datamanager.database.repository.impl.TowerRepository.addAll","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/add-all.html","searchKeys":["addAll","open override fun addAll(addObjects: List<Tower>)","com.example.datamanager.database.repository.impl.TowerRepository.addAll"]},{"name":"open override fun addListenerToNearestObjects(gpsLocation: Location, radius: Int, listener: (List<Any>) -> Unit)","description":"com.example.datamanager.DataManager.addListenerToNearestObjects","location":"data-manager/com.example.datamanager/-data-manager/add-listener-to-nearest-objects.html","searchKeys":["addListenerToNearestObjects","open override fun addListenerToNearestObjects(gpsLocation: Location, radius: Int, listener: (List<Any>) -> Unit)","com.example.datamanager.DataManager.addListenerToNearestObjects"]},{"name":"open override fun addListenerToNearestObjects(gpsLocation: Location, radius: Int, listener: (List<Any>) -> Unit)","description":"com.example.datamanager.search.impl.SearchLocationObjectManagerImpl.addListenerToNearestObjects","location":"data-manager/com.example.datamanager.search.impl/-search-location-object-manager-impl/add-listener-to-nearest-objects.html","searchKeys":["addListenerToNearestObjects","open override fun addListenerToNearestObjects(gpsLocation: Location, radius: Int, listener: (List<Any>) -> Unit)","com.example.datamanager.search.impl.SearchLocationObjectManagerImpl.addListenerToNearestObjects"]},{"name":"open override fun delete(deleteObject: Additional)","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.delete","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/delete.html","searchKeys":["delete","open override fun delete(deleteObject: Additional)","com.example.datamanager.database.repository.impl.AdditionalRepository.delete"]},{"name":"open override fun delete(deleteObject: Coordinate)","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.delete","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/delete.html","searchKeys":["delete","open override fun delete(deleteObject: Coordinate)","com.example.datamanager.database.repository.impl.CoordinateRepository.delete"]},{"name":"open override fun delete(deleteObject: Passport)","description":"com.example.datamanager.database.repository.impl.PassportRepository.delete","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/delete.html","searchKeys":["delete","open override fun delete(deleteObject: Passport)","com.example.datamanager.database.repository.impl.PassportRepository.delete"]},{"name":"open override fun delete(deleteObject: Tower)","description":"com.example.datamanager.database.repository.impl.TowerRepository.delete","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/delete.html","searchKeys":["delete","open override fun delete(deleteObject: Tower)","com.example.datamanager.database.repository.impl.TowerRepository.delete"]},{"name":"open override fun deleteAll()","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.deleteAll","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/delete-all.html","searchKeys":["deleteAll","open override fun deleteAll()","com.example.datamanager.database.repository.impl.AdditionalRepository.deleteAll"]},{"name":"open override fun deleteAll()","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.deleteAll","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/delete-all.html","searchKeys":["deleteAll","open override fun deleteAll()","com.example.datamanager.database.repository.impl.CoordinateRepository.deleteAll"]},{"name":"open override fun deleteAll()","description":"com.example.datamanager.database.repository.impl.PassportRepository.deleteAll","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/delete-all.html","searchKeys":["deleteAll","open override fun deleteAll()","com.example.datamanager.database.repository.impl.PassportRepository.deleteAll"]},{"name":"open override fun deleteAll()","description":"com.example.datamanager.database.repository.impl.TowerRepository.deleteAll","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/delete-all.html","searchKeys":["deleteAll","open override fun deleteAll()","com.example.datamanager.database.repository.impl.TowerRepository.deleteAll"]},{"name":"open override fun findAll(): List<Additional>","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.findAll","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/find-all.html","searchKeys":["findAll","open override fun findAll(): List<Additional>","com.example.datamanager.database.repository.impl.AdditionalRepository.findAll"]},{"name":"open override fun findAll(): List<Coordinate>","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.findAll","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/find-all.html","searchKeys":["findAll","open override fun findAll(): List<Coordinate>","com.example.datamanager.database.repository.impl.CoordinateRepository.findAll"]},{"name":"open override fun findAll(): List<Passport>","description":"com.example.datamanager.database.repository.impl.PassportRepository.findAll","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/find-all.html","searchKeys":["findAll","open override fun findAll(): List<Passport>","com.example.datamanager.database.repository.impl.PassportRepository.findAll"]},{"name":"open override fun findAll(): List<Tower>","description":"com.example.datamanager.database.repository.impl.TowerRepository.findAll","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/find-all.html","searchKeys":["findAll","open override fun findAll(): List<Tower>","com.example.datamanager.database.repository.impl.TowerRepository.findAll"]},{"name":"open override fun findCurrentWithParameter(query: SupportSQLiteQuery): Additional?","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.findCurrentWithParameter","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/find-current-with-parameter.html","searchKeys":["findCurrentWithParameter","open override fun findCurrentWithParameter(query: SupportSQLiteQuery): Additional?","com.example.datamanager.database.repository.impl.AdditionalRepository.findCurrentWithParameter"]},{"name":"open override fun findCurrentWithParameter(query: SupportSQLiteQuery): Coordinate?","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.findCurrentWithParameter","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/find-current-with-parameter.html","searchKeys":["findCurrentWithParameter","open override fun findCurrentWithParameter(query: SupportSQLiteQuery): Coordinate?","com.example.datamanager.database.repository.impl.CoordinateRepository.findCurrentWithParameter"]},{"name":"open override fun findCurrentWithParameter(query: SupportSQLiteQuery): Passport?","description":"com.example.datamanager.database.repository.impl.PassportRepository.findCurrentWithParameter","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/find-current-with-parameter.html","searchKeys":["findCurrentWithParameter","open override fun findCurrentWithParameter(query: SupportSQLiteQuery): Passport?","com.example.datamanager.database.repository.impl.PassportRepository.findCurrentWithParameter"]},{"name":"open override fun findCurrentWithParameter(query: SupportSQLiteQuery): Tower?","description":"com.example.datamanager.database.repository.impl.TowerRepository.findCurrentWithParameter","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/find-current-with-parameter.html","searchKeys":["findCurrentWithParameter","open override fun findCurrentWithParameter(query: SupportSQLiteQuery): Tower?","com.example.datamanager.database.repository.impl.TowerRepository.findCurrentWithParameter"]},{"name":"open override fun findObjects(gpsLocation: Location, radius: Int): MutableLiveData<RequestResult<Any>>","description":"com.example.datamanager.DataManager.findObjects","location":"data-manager/com.example.datamanager/-data-manager/find-objects.html","searchKeys":["findObjects","open override fun findObjects(gpsLocation: Location, radius: Int): MutableLiveData<RequestResult<Any>>","com.example.datamanager.DataManager.findObjects"]},{"name":"open override fun findObjects(gpsLocation: Location, radius: Int): MutableLiveData<RequestResult<Any>>","description":"com.example.datamanager.search.impl.SearchLocationObjectManagerImpl.findObjects","location":"data-manager/com.example.datamanager.search.impl/-search-location-object-manager-impl/find-objects.html","searchKeys":["findObjects","open override fun findObjects(gpsLocation: Location, radius: Int): MutableLiveData<RequestResult<Any>>","com.example.datamanager.search.impl.SearchLocationObjectManagerImpl.findObjects"]},{"name":"open override fun findWithParameters(query: SupportSQLiteQuery): List<Additional>","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.findWithParameters","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/find-with-parameters.html","searchKeys":["findWithParameters","open override fun findWithParameters(query: SupportSQLiteQuery): List<Additional>","com.example.datamanager.database.repository.impl.AdditionalRepository.findWithParameters"]},{"name":"open override fun findWithParameters(query: SupportSQLiteQuery): List<Coordinate>","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.findWithParameters","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/find-with-parameters.html","searchKeys":["findWithParameters","open override fun findWithParameters(query: SupportSQLiteQuery): List<Coordinate>","com.example.datamanager.database.repository.impl.CoordinateRepository.findWithParameters"]},{"name":"open override fun findWithParameters(query: SupportSQLiteQuery): List<Passport>","description":"com.example.datamanager.database.repository.impl.PassportRepository.findWithParameters","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/find-with-parameters.html","searchKeys":["findWithParameters","open override fun findWithParameters(query: SupportSQLiteQuery): List<Passport>","com.example.datamanager.database.repository.impl.PassportRepository.findWithParameters"]},{"name":"open override fun findWithParameters(query: SupportSQLiteQuery): List<Tower>","description":"com.example.datamanager.database.repository.impl.TowerRepository.findWithParameters","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/find-with-parameters.html","searchKeys":["findWithParameters","open override fun findWithParameters(query: SupportSQLiteQuery): List<Tower>","com.example.datamanager.database.repository.impl.TowerRepository.findWithParameters"]},{"name":"open override fun getActualInternalObject(): LiveData<LoadResult<Additional>>","description":"com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl.getActualInternalObject","location":"data-manager/com.example.datamanager.external.handler.impl/-additional-binding-handler-impl/get-actual-internal-object.html","searchKeys":["getActualInternalObject","open override fun getActualInternalObject(): LiveData<LoadResult<Additional>>","com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl.getActualInternalObject"]},{"name":"open override fun getActualInternalObject(): LiveData<LoadResult<Tower>>","description":"com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl.getActualInternalObject","location":"data-manager/com.example.datamanager.external.handler.impl/-tower-binding-handler-impl/get-actual-internal-object.html","searchKeys":["getActualInternalObject","open override fun getActualInternalObject(): LiveData<LoadResult<Tower>>","com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl.getActualInternalObject"]},{"name":"open override fun getById(id: Long): Additional?","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.getById","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/get-by-id.html","searchKeys":["getById","open override fun getById(id: Long): Additional?","com.example.datamanager.database.repository.impl.AdditionalRepository.getById"]},{"name":"open override fun getById(id: Long): Coordinate?","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.getById","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/get-by-id.html","searchKeys":["getById","open override fun getById(id: Long): Coordinate?","com.example.datamanager.database.repository.impl.CoordinateRepository.getById"]},{"name":"open override fun getById(id: Long): Passport?","description":"com.example.datamanager.database.repository.impl.PassportRepository.getById","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/get-by-id.html","searchKeys":["getById","open override fun getById(id: Long): Passport?","com.example.datamanager.database.repository.impl.PassportRepository.getById"]},{"name":"open override fun getById(id: Long): Tower?","description":"com.example.datamanager.database.repository.impl.TowerRepository.getById","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/get-by-id.html","searchKeys":["getById","open override fun getById(id: Long): Tower?","com.example.datamanager.database.repository.impl.TowerRepository.getById"]},{"name":"open override fun getData(): LiveData<List<Additional>>","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.getData","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/get-data.html","searchKeys":["getData","open override fun getData(): LiveData<List<Additional>>","com.example.datamanager.database.repository.impl.AdditionalRepository.getData"]},{"name":"open override fun getData(): LiveData<List<Coordinate>>","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.getData","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/get-data.html","searchKeys":["getData","open override fun getData(): LiveData<List<Coordinate>>","com.example.datamanager.database.repository.impl.CoordinateRepository.getData"]},{"name":"open override fun getData(): LiveData<List<Passport>>","description":"com.example.datamanager.database.repository.impl.PassportRepository.getData","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/get-data.html","searchKeys":["getData","open override fun getData(): LiveData<List<Passport>>","com.example.datamanager.database.repository.impl.PassportRepository.getData"]},{"name":"open override fun getData(): LiveData<List<Tower>>","description":"com.example.datamanager.database.repository.impl.TowerRepository.getData","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/get-data.html","searchKeys":["getData","open override fun getData(): LiveData<List<Tower>>","com.example.datamanager.database.repository.impl.TowerRepository.getData"]},{"name":"open override fun import(file: File): LiveData<WorkResult>","description":"com.example.datamanager.DataManager.import","location":"data-manager/com.example.datamanager/-data-manager/import.html","searchKeys":["import","open override fun import(file: File): LiveData<WorkResult>","com.example.datamanager.DataManager.import"]},{"name":"open override fun import(file: File): LiveData<WorkResult>","description":"com.example.datamanager.exchange.impl.ImportFileManagerImpl.import","location":"data-manager/com.example.datamanager.exchange.impl/-import-file-manager-impl/import.html","searchKeys":["import","open override fun import(file: File): LiveData<WorkResult>","com.example.datamanager.exchange.impl.ImportFileManagerImpl.import"]},{"name":"open override fun import(files: List<File>): LiveData<WorkResult>","description":"com.example.datamanager.DataManager.import","location":"data-manager/com.example.datamanager/-data-manager/import.html","searchKeys":["import","open override fun import(files: List<File>): LiveData<WorkResult>","com.example.datamanager.DataManager.import"]},{"name":"open override fun import(files: List<File>): LiveData<WorkResult>","description":"com.example.datamanager.exchange.impl.ImportFileManagerImpl.import","location":"data-manager/com.example.datamanager.exchange.impl/-import-file-manager-impl/import.html","searchKeys":["import","open override fun import(files: List<File>): LiveData<WorkResult>","com.example.datamanager.exchange.impl.ImportFileManagerImpl.import"]},{"name":"open override fun nextInternalObject(): LiveData<LoadResult<Additional>>","description":"com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl.nextInternalObject","location":"data-manager/com.example.datamanager.external.handler.impl/-additional-binding-handler-impl/next-internal-object.html","searchKeys":["nextInternalObject","open override fun nextInternalObject(): LiveData<LoadResult<Additional>>","com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl.nextInternalObject"]},{"name":"open override fun nextInternalObject(): LiveData<LoadResult<Tower>>","description":"com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl.nextInternalObject","location":"data-manager/com.example.datamanager.external.handler.impl/-tower-binding-handler-impl/next-internal-object.html","searchKeys":["nextInternalObject","open override fun nextInternalObject(): LiveData<LoadResult<Tower>>","com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl.nextInternalObject"]},{"name":"open override fun previousInternalObject(): LiveData<LoadResult<Additional>>","description":"com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl.previousInternalObject","location":"data-manager/com.example.datamanager.external.handler.impl/-additional-binding-handler-impl/previous-internal-object.html","searchKeys":["previousInternalObject","open override fun previousInternalObject(): LiveData<LoadResult<Additional>>","com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl.previousInternalObject"]},{"name":"open override fun previousInternalObject(): LiveData<LoadResult<Tower>>","description":"com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl.previousInternalObject","location":"data-manager/com.example.datamanager.external.handler.impl/-tower-binding-handler-impl/previous-internal-object.html","searchKeys":["previousInternalObject","open override fun previousInternalObject(): LiveData<LoadResult<Tower>>","com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl.previousInternalObject"]},{"name":"open override fun setInternalObject(internalObject: Additional): LiveData<LoadResult<Additional>>","description":"com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl.setInternalObject","location":"data-manager/com.example.datamanager.external.handler.impl/-additional-binding-handler-impl/set-internal-object.html","searchKeys":["setInternalObject","open override fun setInternalObject(internalObject: Additional): LiveData<LoadResult<Additional>>","com.example.datamanager.external.handler.impl.AdditionalBindingHandlerImpl.setInternalObject"]},{"name":"open override fun setInternalObject(internalObject: Tower): LiveData<LoadResult<Tower>>","description":"com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl.setInternalObject","location":"data-manager/com.example.datamanager.external.handler.impl/-tower-binding-handler-impl/set-internal-object.html","searchKeys":["setInternalObject","open override fun setInternalObject(internalObject: Tower): LiveData<LoadResult<Tower>>","com.example.datamanager.external.handler.impl.TowerBindingHandlerImpl.setInternalObject"]},{"name":"open override fun update(updateObject: Additional)","description":"com.example.datamanager.database.repository.impl.AdditionalRepository.update","location":"data-manager/com.example.datamanager.database.repository.impl/-additional-repository/update.html","searchKeys":["update","open override fun update(updateObject: Additional)","com.example.datamanager.database.repository.impl.AdditionalRepository.update"]},{"name":"open override fun update(updateObject: Coordinate)","description":"com.example.datamanager.database.repository.impl.CoordinateRepository.update","location":"data-manager/com.example.datamanager.database.repository.impl/-coordinate-repository/update.html","searchKeys":["update","open override fun update(updateObject: Coordinate)","com.example.datamanager.database.repository.impl.CoordinateRepository.update"]},{"name":"open override fun update(updateObject: Passport)","description":"com.example.datamanager.database.repository.impl.PassportRepository.update","location":"data-manager/com.example.datamanager.database.repository.impl/-passport-repository/update.html","searchKeys":["update","open override fun update(updateObject: Passport)","com.example.datamanager.database.repository.impl.PassportRepository.update"]},{"name":"open override fun update(updateObject: Tower)","description":"com.example.datamanager.database.repository.impl.TowerRepository.update","location":"data-manager/com.example.datamanager.database.repository.impl/-tower-repository/update.html","searchKeys":["update","open override fun update(updateObject: Tower)","com.example.datamanager.database.repository.impl.TowerRepository.update"]},{"name":"sealed class LoadResult<T>","description":"com.example.datamanager.external.entities.LoadResult","location":"data-manager/com.example.datamanager.external.entities/-load-result/index.html","searchKeys":["LoadResult","sealed class LoadResult<T>","com.example.datamanager.external.entities.LoadResult"]},{"name":"sealed class NearestObjectListener<T>","description":"com.example.datamanager.external.entities.NearestObjectListener","location":"data-manager/com.example.datamanager.external.entities/-nearest-object-listener/index.html","searchKeys":["NearestObjectListener","sealed class NearestObjectListener<T>","com.example.datamanager.external.entities.NearestObjectListener"]},{"name":"sealed class RequestResult<T>","description":"com.example.datamanager.external.entities.RequestResult","location":"data-manager/com.example.datamanager.external.entities/-request-result/index.html","searchKeys":["RequestResult","sealed class RequestResult<T>","com.example.datamanager.external.entities.RequestResult"]},{"name":"sealed class WorkResult","description":"com.example.datamanager.external.entities.WorkResult","location":"data-manager/com.example.datamanager.external.entities/-work-result/index.html","searchKeys":["WorkResult","sealed class WorkResult","com.example.datamanager.external.entities.WorkResult"]},{"name":"val add_id: Long = 0","description":"com.example.datamanager.database.entity.Additional.add_id","location":"data-manager/com.example.datamanager.database.entity/-additional/add_id.html","searchKeys":["add_id","val add_id: Long = 0","com.example.datamanager.database.entity.Additional.add_id"]},{"name":"val coord_id: Long = 0","description":"com.example.datamanager.database.entity.Coordinate.coord_id","location":"data-manager/com.example.datamanager.database.entity/-coordinate/coord_id.html","searchKeys":["coord_id","val coord_id: Long = 0","com.example.datamanager.database.entity.Coordinate.coord_id"]},{"name":"val data: List<T>? = null","description":"com.example.datamanager.external.entities.RequestResult.data","location":"data-manager/com.example.datamanager.external.entities/-request-result/data.html","searchKeys":["data","val data: List<T>? = null","com.example.datamanager.external.entities.RequestResult.data"]},{"name":"val data: T?","description":"com.example.datamanager.external.entities.LoadResult.data","location":"data-manager/com.example.datamanager.external.entities/-load-result/data.html","searchKeys":["data","val data: T?","com.example.datamanager.external.entities.LoadResult.data"]},{"name":"val dataList: List<T>","description":"com.example.datamanager.external.entities.NearestObjectListener.dataList","location":"data-manager/com.example.datamanager.external.entities/-nearest-object-listener/data-list.html","searchKeys":["dataList","val dataList: List<T>","com.example.datamanager.external.entities.NearestObjectListener.dataList"]},{"name":"val error: Exception? = null","description":"com.example.datamanager.external.entities.LoadResult.error","location":"data-manager/com.example.datamanager.external.entities/-load-result/error.html","searchKeys":["error","val error: Exception? = null","com.example.datamanager.external.entities.LoadResult.error"]},{"name":"val error: Exception? = null","description":"com.example.datamanager.external.entities.RequestResult.error","location":"data-manager/com.example.datamanager.external.entities/-request-result/error.html","searchKeys":["error","val error: Exception? = null","com.example.datamanager.external.entities.RequestResult.error"]},{"name":"val errors: MutableList<Exception>","description":"com.example.datamanager.external.entities.WorkResult.errors","location":"data-manager/com.example.datamanager.external.entities/-work-result/errors.html","searchKeys":["errors","val errors: MutableList<Exception>","com.example.datamanager.external.entities.WorkResult.errors"]},{"name":"val passport_id: Long = 0","description":"com.example.datamanager.database.entity.Passport.passport_id","location":"data-manager/com.example.datamanager.database.entity/-passport/passport_id.html","searchKeys":["passport_id","val passport_id: Long = 0","com.example.datamanager.database.entity.Passport.passport_id"]},{"name":"val progress: Int? = 0","description":"com.example.datamanager.external.entities.RequestResult.progress","location":"data-manager/com.example.datamanager.external.entities/-request-result/progress.html","searchKeys":["progress","val progress: Int? = 0","com.example.datamanager.external.entities.RequestResult.progress"]},{"name":"val progress: Int? = 0","description":"com.example.datamanager.external.entities.WorkResult.progress","location":"data-manager/com.example.datamanager.external.entities/-work-result/progress.html","searchKeys":["progress","val progress: Int? = 0","com.example.datamanager.external.entities.WorkResult.progress"]},{"name":"val tower_id: Long = 0","description":"com.example.datamanager.database.entity.Tower.tower_id","location":"data-manager/com.example.datamanager.database.entity/-tower/tower_id.html","searchKeys":["tower_id","val tower_id: Long = 0","com.example.datamanager.database.entity.Tower.tower_id"]},{"name":"var additionals: List<XMLAdditionalDto>","description":"com.example.datamanager.exchange.dto.FullTower.additionals","location":"data-manager/com.example.datamanager.exchange.dto/-full-tower/additionals.html","searchKeys":["additionals","var additionals: List<XMLAdditionalDto>","com.example.datamanager.exchange.dto.FullTower.additionals"]},{"name":"var assetNum: String","description":"com.example.datamanager.database.entity.Tower.assetNum","location":"data-manager/com.example.datamanager.database.entity/-tower/asset-num.html","searchKeys":["assetNum","var assetNum: String","com.example.datamanager.database.entity.Tower.assetNum"]},{"name":"var assetNum: String? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.assetNum","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/asset-num.html","searchKeys":["assetNum","var assetNum: String? = null","com.example.datamanager.exchange.dto.XMLTowerDto.assetNum"]},{"name":"var catenary: Int? = null","description":"com.example.datamanager.database.entity.Tower.catenary","location":"data-manager/com.example.datamanager.database.entity/-tower/catenary.html","searchKeys":["catenary","var catenary: Int? = null","com.example.datamanager.database.entity.Tower.catenary"]},{"name":"var catenary: Int? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.catenary","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/catenary.html","searchKeys":["catenary","var catenary: Int? = null","com.example.datamanager.exchange.dto.XMLTowerDto.catenary"]},{"name":"var changeDate: Date","description":"com.example.datamanager.database.entity.Additional.changeDate","location":"data-manager/com.example.datamanager.database.entity/-additional/change-date.html","searchKeys":["changeDate","var changeDate: Date","com.example.datamanager.database.entity.Additional.changeDate"]},{"name":"var changeDate: Date","description":"com.example.datamanager.database.entity.Coordinate.changeDate","location":"data-manager/com.example.datamanager.database.entity/-coordinate/change-date.html","searchKeys":["changeDate","var changeDate: Date","com.example.datamanager.database.entity.Coordinate.changeDate"]},{"name":"var changeDate: Date","description":"com.example.datamanager.database.entity.Passport.changeDate","location":"data-manager/com.example.datamanager.database.entity/-passport/change-date.html","searchKeys":["changeDate","var changeDate: Date","com.example.datamanager.database.entity.Passport.changeDate"]},{"name":"var changeDate: Date","description":"com.example.datamanager.database.entity.Tower.changeDate","location":"data-manager/com.example.datamanager.database.entity/-tower/change-date.html","searchKeys":["changeDate","var changeDate: Date","com.example.datamanager.database.entity.Tower.changeDate"]},{"name":"var changeDate: String? = null","description":"com.example.datamanager.exchange.dto.XMLAdditionalDto.changeDate","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-additional-dto/change-date.html","searchKeys":["changeDate","var changeDate: String? = null","com.example.datamanager.exchange.dto.XMLAdditionalDto.changeDate"]},{"name":"var changeDate: String? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.changeDate","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/change-date.html","searchKeys":["changeDate","var changeDate: String? = null","com.example.datamanager.exchange.dto.XMLPassportDto.changeDate"]},{"name":"var coord_id: Long?","description":"com.example.datamanager.database.entity.Additional.coord_id","location":"data-manager/com.example.datamanager.database.entity/-additional/coord_id.html","searchKeys":["coord_id","var coord_id: Long?","com.example.datamanager.database.entity.Additional.coord_id"]},{"name":"var coord_id: Long? = null","description":"com.example.datamanager.database.entity.Tower.coord_id","location":"data-manager/com.example.datamanager.database.entity/-tower/coord_id.html","searchKeys":["coord_id","var coord_id: Long? = null","com.example.datamanager.database.entity.Tower.coord_id"]},{"name":"var countWire: String? = null","description":"com.example.datamanager.database.entity.Tower.countWire","location":"data-manager/com.example.datamanager.database.entity/-tower/count-wire.html","searchKeys":["countWire","var countWire: String? = null","com.example.datamanager.database.entity.Tower.countWire"]},{"name":"var countWire: String? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.countWire","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/count-wire.html","searchKeys":["countWire","var countWire: String? = null","com.example.datamanager.exchange.dto.XMLTowerDto.countWire"]},{"name":"var currentWay: String? = null","description":"com.example.datamanager.database.entity.Passport.currentWay","location":"data-manager/com.example.datamanager.database.entity/-passport/current-way.html","searchKeys":["currentWay","var currentWay: String? = null","com.example.datamanager.database.entity.Passport.currentWay"]},{"name":"var currentWay: String? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.currentWay","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/current-way.html","searchKeys":["currentWay","var currentWay: String? = null","com.example.datamanager.exchange.dto.XMLPassportDto.currentWay"]},{"name":"var currentWayID: Long? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.currentWayID","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/current-way-i-d.html","searchKeys":["currentWayID","var currentWayID: Long? = null","com.example.datamanager.exchange.dto.XMLPassportDto.currentWayID"]},{"name":"var currentWayId: Long? = null","description":"com.example.datamanager.database.entity.Passport.currentWayId","location":"data-manager/com.example.datamanager.database.entity/-passport/current-way-id.html","searchKeys":["currentWayId","var currentWayId: Long? = null","com.example.datamanager.database.entity.Passport.currentWayId"]},{"name":"var distance: Int? = null","description":"com.example.datamanager.database.entity.Tower.distance","location":"data-manager/com.example.datamanager.database.entity/-tower/distance.html","searchKeys":["distance","var distance: Int? = null","com.example.datamanager.database.entity.Tower.distance"]},{"name":"var distance: Int? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.distance","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/distance.html","searchKeys":["distance","var distance: Int? = null","com.example.datamanager.exchange.dto.XMLTowerDto.distance"]},{"name":"var echName: String? = null","description":"com.example.datamanager.database.entity.Passport.echName","location":"data-manager/com.example.datamanager.database.entity/-passport/ech-name.html","searchKeys":["echName","var echName: String? = null","com.example.datamanager.database.entity.Passport.echName"]},{"name":"var echName: String? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.echName","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/ech-name.html","searchKeys":["echName","var echName: String? = null","com.example.datamanager.exchange.dto.XMLPassportDto.echName"]},{"name":"var echkName: String? = null","description":"com.example.datamanager.database.entity.Passport.echkName","location":"data-manager/com.example.datamanager.database.entity/-passport/echk-name.html","searchKeys":["echkName","var echkName: String? = null","com.example.datamanager.database.entity.Passport.echkName"]},{"name":"var echkName: String? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.echkName","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/echk-name.html","searchKeys":["echkName","var echkName: String? = null","com.example.datamanager.exchange.dto.XMLPassportDto.echkName"]},{"name":"var gabarit: String? = null","description":"com.example.datamanager.database.entity.Tower.gabarit","location":"data-manager/com.example.datamanager.database.entity/-tower/gabarit.html","searchKeys":["gabarit","var gabarit: String? = null","com.example.datamanager.database.entity.Tower.gabarit"]},{"name":"var gabarit: String? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.gabarit","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/gabarit.html","searchKeys":["gabarit","var gabarit: String? = null","com.example.datamanager.exchange.dto.XMLTowerDto.gabarit"]},{"name":"var grounded: Int? = null","description":"com.example.datamanager.database.entity.Tower.grounded","location":"data-manager/com.example.datamanager.database.entity/-tower/grounded.html","searchKeys":["grounded","var grounded: Int? = null","com.example.datamanager.database.entity.Tower.grounded"]},{"name":"var grounded: Int? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.grounded","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/grounded.html","searchKeys":["grounded","var grounded: Int? = null","com.example.datamanager.exchange.dto.XMLTowerDto.grounded"]},{"name":"var height: Int? = null","description":"com.example.datamanager.database.entity.Tower.height","location":"data-manager/com.example.datamanager.database.entity/-tower/height.html","searchKeys":["height","var height: Int? = null","com.example.datamanager.database.entity.Tower.height"]},{"name":"var height: Int? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.height","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/height.html","searchKeys":["height","var height: Int? = null","com.example.datamanager.exchange.dto.XMLTowerDto.height"]},{"name":"var idtf: String","description":"com.example.datamanager.database.entity.Tower.idtf","location":"data-manager/com.example.datamanager.database.entity/-tower/idtf.html","searchKeys":["idtf","var idtf: String","com.example.datamanager.database.entity.Tower.idtf"]},{"name":"var idtf: String? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.idtf","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/idtf.html","searchKeys":["idtf","var idtf: String? = null","com.example.datamanager.exchange.dto.XMLTowerDto.idtf"]},{"name":"var initialKM: Int? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.initialKM","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/initial-k-m.html","searchKeys":["initialKM","var initialKM: Int? = null","com.example.datamanager.exchange.dto.XMLPassportDto.initialKM"]},{"name":"var initialKm: Int? = null","description":"com.example.datamanager.database.entity.Passport.initialKm","location":"data-manager/com.example.datamanager.database.entity/-passport/initial-km.html","searchKeys":["initialKm","var initialKm: Int? = null","com.example.datamanager.database.entity.Passport.initialKm"]},{"name":"var initialM: Int? = null","description":"com.example.datamanager.database.entity.Passport.initialM","location":"data-manager/com.example.datamanager.database.entity/-passport/initial-m.html","searchKeys":["initialM","var initialM: Int? = null","com.example.datamanager.database.entity.Passport.initialM"]},{"name":"var initialM: Int? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.initialM","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/initial-m.html","searchKeys":["initialM","var initialM: Int? = null","com.example.datamanager.exchange.dto.XMLPassportDto.initialM"]},{"name":"var initialMeter: Int? = null","description":"com.example.datamanager.database.entity.Passport.initialMeter","location":"data-manager/com.example.datamanager.database.entity/-passport/initial-meter.html","searchKeys":["initialMeter","var initialMeter: Int? = null","com.example.datamanager.database.entity.Passport.initialMeter"]},{"name":"var initialMeter: Int? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.initialMeter","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/initial-meter.html","searchKeys":["initialMeter","var initialMeter: Int? = null","com.example.datamanager.exchange.dto.XMLPassportDto.initialMeter"]},{"name":"var initialPK: Int? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.initialPK","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/initial-p-k.html","searchKeys":["initialPK","var initialPK: Int? = null","com.example.datamanager.exchange.dto.XMLPassportDto.initialPK"]},{"name":"var initialPk: Int? = null","description":"com.example.datamanager.database.entity.Passport.initialPk","location":"data-manager/com.example.datamanager.database.entity/-passport/initial-pk.html","searchKeys":["initialPk","var initialPk: Int? = null","com.example.datamanager.database.entity.Passport.initialPk"]},{"name":"var km: Int? = null","description":"com.example.datamanager.database.entity.Tower.km","location":"data-manager/com.example.datamanager.database.entity/-tower/km.html","searchKeys":["km","var km: Int? = null","com.example.datamanager.database.entity.Tower.km"]},{"name":"var km: Int? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.km","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/km.html","searchKeys":["km","var km: Int? = null","com.example.datamanager.exchange.dto.XMLTowerDto.km"]},{"name":"var latitude: Double","description":"com.example.datamanager.database.entity.Coordinate.latitude","location":"data-manager/com.example.datamanager.database.entity/-coordinate/latitude.html","searchKeys":["latitude","var latitude: Double","com.example.datamanager.database.entity.Coordinate.latitude"]},{"name":"var latitude: Double? = null","description":"com.example.datamanager.exchange.dto.XMLAdditionalDto.latitude","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-additional-dto/latitude.html","searchKeys":["latitude","var latitude: Double? = null","com.example.datamanager.exchange.dto.XMLAdditionalDto.latitude"]},{"name":"var latitude: Double? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.latitude","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/latitude.html","searchKeys":["latitude","var latitude: Double? = null","com.example.datamanager.exchange.dto.XMLTowerDto.latitude"]},{"name":"var locationId: String? = null","description":"com.example.datamanager.database.entity.Passport.locationId","location":"data-manager/com.example.datamanager.database.entity/-passport/location-id.html","searchKeys":["locationId","var locationId: String? = null","com.example.datamanager.database.entity.Passport.locationId"]},{"name":"var locationId: String? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.locationId","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/location-id.html","searchKeys":["locationId","var locationId: String? = null","com.example.datamanager.exchange.dto.XMLPassportDto.locationId"]},{"name":"var longitude: Double","description":"com.example.datamanager.database.entity.Coordinate.longitude","location":"data-manager/com.example.datamanager.database.entity/-coordinate/longitude.html","searchKeys":["longitude","var longitude: Double","com.example.datamanager.database.entity.Coordinate.longitude"]},{"name":"var longitude: Double? = null","description":"com.example.datamanager.exchange.dto.XMLAdditionalDto.longitude","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-additional-dto/longitude.html","searchKeys":["longitude","var longitude: Double? = null","com.example.datamanager.exchange.dto.XMLAdditionalDto.longitude"]},{"name":"var longitude: Double? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.longitude","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/longitude.html","searchKeys":["longitude","var longitude: Double? = null","com.example.datamanager.exchange.dto.XMLTowerDto.longitude"]},{"name":"var m: Int? = null","description":"com.example.datamanager.database.entity.Tower.m","location":"data-manager/com.example.datamanager.database.entity/-tower/m.html","searchKeys":["m","var m: Int? = null","com.example.datamanager.database.entity.Tower.m"]},{"name":"var m: Int? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.m","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/m.html","searchKeys":["m","var m: Int? = null","com.example.datamanager.exchange.dto.XMLTowerDto.m"]},{"name":"var number: String","description":"com.example.datamanager.database.entity.Additional.number","location":"data-manager/com.example.datamanager.database.entity/-additional/number.html","searchKeys":["number","var number: String","com.example.datamanager.database.entity.Additional.number"]},{"name":"var number: String","description":"com.example.datamanager.database.entity.Tower.number","location":"data-manager/com.example.datamanager.database.entity/-tower/number.html","searchKeys":["number","var number: String","com.example.datamanager.database.entity.Tower.number"]},{"name":"var number: String? = null","description":"com.example.datamanager.exchange.dto.XMLAdditionalDto.number","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-additional-dto/number.html","searchKeys":["number","var number: String? = null","com.example.datamanager.exchange.dto.XMLAdditionalDto.number"]},{"name":"var number: String? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.number","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/number.html","searchKeys":["number","var number: String? = null","com.example.datamanager.exchange.dto.XMLTowerDto.number"]},{"name":"var offset: Int? = null","description":"com.example.datamanager.database.entity.Tower.offset","location":"data-manager/com.example.datamanager.database.entity/-tower/offset.html","searchKeys":["offset","var offset: Int? = null","com.example.datamanager.database.entity.Tower.offset"]},{"name":"var offset: Int? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.offset","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/offset.html","searchKeys":["offset","var offset: Int? = null","com.example.datamanager.exchange.dto.XMLTowerDto.offset"]},{"name":"var passport: XMLPassportDto? = null","description":"com.example.datamanager.exchange.dto.FullSectionCertificate.passport","location":"data-manager/com.example.datamanager.exchange.dto/-full-section-certificate/passport.html","searchKeys":["passport","var passport: XMLPassportDto? = null","com.example.datamanager.exchange.dto.FullSectionCertificate.passport"]},{"name":"var passport: XMLPassportDto? = null","description":"com.example.datamanager.exchange.dto.SectionCertificate.passport","location":"data-manager/com.example.datamanager.exchange.dto/-section-certificate/passport.html","searchKeys":["passport","var passport: XMLPassportDto? = null","com.example.datamanager.exchange.dto.SectionCertificate.passport"]},{"name":"var passport_id: Long = 0","description":"com.example.datamanager.database.entity.Tower.passport_id","location":"data-manager/com.example.datamanager.database.entity/-tower/passport_id.html","searchKeys":["passport_id","var passport_id: Long = 0","com.example.datamanager.database.entity.Tower.passport_id"]},{"name":"var pk: Int? = null","description":"com.example.datamanager.database.entity.Tower.pk","location":"data-manager/com.example.datamanager.database.entity/-tower/pk.html","searchKeys":["pk","var pk: Int? = null","com.example.datamanager.database.entity.Tower.pk"]},{"name":"var pk: Int? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.pk","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/pk.html","searchKeys":["pk","var pk: Int? = null","com.example.datamanager.exchange.dto.XMLTowerDto.pk"]},{"name":"var plotLength: Int? = null","description":"com.example.datamanager.database.entity.Passport.plotLength","location":"data-manager/com.example.datamanager.database.entity/-passport/plot-length.html","searchKeys":["plotLength","var plotLength: Int? = null","com.example.datamanager.database.entity.Passport.plotLength"]},{"name":"var plotLength: Int? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.plotLength","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/plot-length.html","searchKeys":["plotLength","var plotLength: Int? = null","com.example.datamanager.exchange.dto.XMLPassportDto.plotLength"]},{"name":"var radius: String? = null","description":"com.example.datamanager.database.entity.Tower.radius","location":"data-manager/com.example.datamanager.database.entity/-tower/radius.html","searchKeys":["radius","var radius: String? = null","com.example.datamanager.database.entity.Tower.radius"]},{"name":"var radius: String? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.radius","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/radius.html","searchKeys":["radius","var radius: String? = null","com.example.datamanager.exchange.dto.XMLTowerDto.radius"]},{"name":"var sectionId: String? = null","description":"com.example.datamanager.database.entity.Passport.sectionId","location":"data-manager/com.example.datamanager.database.entity/-passport/section-id.html","searchKeys":["sectionId","var sectionId: String? = null","com.example.datamanager.database.entity.Passport.sectionId"]},{"name":"var sectionId: String? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.sectionId","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/section-id.html","searchKeys":["sectionId","var sectionId: String? = null","com.example.datamanager.exchange.dto.XMLPassportDto.sectionId"]},{"name":"var sectionName: String","description":"com.example.datamanager.database.entity.Passport.sectionName","location":"data-manager/com.example.datamanager.database.entity/-passport/section-name.html","searchKeys":["sectionName","var sectionName: String","com.example.datamanager.database.entity.Passport.sectionName"]},{"name":"var sectionName: String? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.sectionName","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/section-name.html","searchKeys":["sectionName","var sectionName: String? = null","com.example.datamanager.exchange.dto.XMLPassportDto.sectionName"]},{"name":"var siteId: Long? = null","description":"com.example.datamanager.database.entity.Passport.siteId","location":"data-manager/com.example.datamanager.database.entity/-passport/site-id.html","searchKeys":["siteId","var siteId: Long? = null","com.example.datamanager.database.entity.Passport.siteId"]},{"name":"var siteId: Long? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.siteId","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/site-id.html","searchKeys":["siteId","var siteId: Long? = null","com.example.datamanager.exchange.dto.XMLPassportDto.siteId"]},{"name":"var speed: Int? = null","description":"com.example.datamanager.database.entity.Tower.speed","location":"data-manager/com.example.datamanager.database.entity/-tower/speed.html","searchKeys":["speed","var speed: Int? = null","com.example.datamanager.database.entity.Tower.speed"]},{"name":"var speed: Int? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.speed","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/speed.html","searchKeys":["speed","var speed: Int? = null","com.example.datamanager.exchange.dto.XMLTowerDto.speed"]},{"name":"var stopSeq: Int? = null","description":"com.example.datamanager.database.entity.Tower.stopSeq","location":"data-manager/com.example.datamanager.database.entity/-tower/stop-seq.html","searchKeys":["stopSeq","var stopSeq: Int? = null","com.example.datamanager.database.entity.Tower.stopSeq"]},{"name":"var stopSeq: Int? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.stopSeq","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/stop-seq.html","searchKeys":["stopSeq","var stopSeq: Int? = null","com.example.datamanager.exchange.dto.XMLTowerDto.stopSeq"]},{"name":"var suspensionAmount: Int? = null","description":"com.example.datamanager.database.entity.Passport.suspensionAmount","location":"data-manager/com.example.datamanager.database.entity/-passport/suspension-amount.html","searchKeys":["suspensionAmount","var suspensionAmount: Int? = null","com.example.datamanager.database.entity.Passport.suspensionAmount"]},{"name":"var suspensionAmount: Int? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.suspensionAmount","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/suspension-amount.html","searchKeys":["suspensionAmount","var suspensionAmount: Int? = null","com.example.datamanager.exchange.dto.XMLPassportDto.suspensionAmount"]},{"name":"var suspensionType: String? = null","description":"com.example.datamanager.database.entity.Tower.suspensionType","location":"data-manager/com.example.datamanager.database.entity/-tower/suspension-type.html","searchKeys":["suspensionType","var suspensionType: String? = null","com.example.datamanager.database.entity.Tower.suspensionType"]},{"name":"var suspensionType: String? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.suspensionType","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/suspension-type.html","searchKeys":["suspensionType","var suspensionType: String? = null","com.example.datamanager.exchange.dto.XMLTowerDto.suspensionType"]},{"name":"var tfType: String? = null","description":"com.example.datamanager.database.entity.Tower.tfType","location":"data-manager/com.example.datamanager.database.entity/-tower/tf-type.html","searchKeys":["tfType","var tfType: String? = null","com.example.datamanager.database.entity.Tower.tfType"]},{"name":"var tfType: String? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.tfType","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/tf-type.html","searchKeys":["tfType","var tfType: String? = null","com.example.datamanager.exchange.dto.XMLTowerDto.tfType"]},{"name":"var tower: XMLTowerDto? = null","description":"com.example.datamanager.exchange.dto.FullTower.tower","location":"data-manager/com.example.datamanager.exchange.dto/-full-tower/tower.html","searchKeys":["tower","var tower: XMLTowerDto? = null","com.example.datamanager.exchange.dto.FullTower.tower"]},{"name":"var tower_id: Long = 0","description":"com.example.datamanager.database.entity.Additional.tower_id","location":"data-manager/com.example.datamanager.database.entity/-additional/tower_id.html","searchKeys":["tower_id","var tower_id: Long = 0","com.example.datamanager.database.entity.Additional.tower_id"]},{"name":"var towers: List<FullTower>","description":"com.example.datamanager.exchange.dto.FullSectionCertificate.towers","location":"data-manager/com.example.datamanager.exchange.dto/-full-section-certificate/towers.html","searchKeys":["towers","var towers: List<FullTower>","com.example.datamanager.exchange.dto.FullSectionCertificate.towers"]},{"name":"var towers: List<XMLTowerDto>","description":"com.example.datamanager.exchange.dto.SectionCertificate.towers","location":"data-manager/com.example.datamanager.exchange.dto/-section-certificate/towers.html","searchKeys":["towers","var towers: List<XMLTowerDto>","com.example.datamanager.exchange.dto.SectionCertificate.towers"]},{"name":"var turn: String? = null","description":"com.example.datamanager.database.entity.Tower.turn","location":"data-manager/com.example.datamanager.database.entity/-tower/turn.html","searchKeys":["turn","var turn: String? = null","com.example.datamanager.database.entity.Tower.turn"]},{"name":"var turn: String? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.turn","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/turn.html","searchKeys":["turn","var turn: String? = null","com.example.datamanager.exchange.dto.XMLTowerDto.turn"]},{"name":"var type: String?","description":"com.example.datamanager.database.entity.Additional.type","location":"data-manager/com.example.datamanager.database.entity/-additional/type.html","searchKeys":["type","var type: String?","com.example.datamanager.database.entity.Additional.type"]},{"name":"var type: String? = null","description":"com.example.datamanager.exchange.dto.XMLAdditionalDto.type","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-additional-dto/type.html","searchKeys":["type","var type: String? = null","com.example.datamanager.exchange.dto.XMLAdditionalDto.type"]},{"name":"var wayAmount: Int? = null","description":"com.example.datamanager.database.entity.Passport.wayAmount","location":"data-manager/com.example.datamanager.database.entity/-passport/way-amount.html","searchKeys":["wayAmount","var wayAmount: Int? = null","com.example.datamanager.database.entity.Passport.wayAmount"]},{"name":"var wayAmount: Int? = null","description":"com.example.datamanager.exchange.dto.XMLPassportDto.wayAmount","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-passport-dto/way-amount.html","searchKeys":["wayAmount","var wayAmount: Int? = null","com.example.datamanager.exchange.dto.XMLPassportDto.wayAmount"]},{"name":"var wireType: String? = null","description":"com.example.datamanager.database.entity.Tower.wireType","location":"data-manager/com.example.datamanager.database.entity/-tower/wire-type.html","searchKeys":["wireType","var wireType: String? = null","com.example.datamanager.database.entity.Tower.wireType"]},{"name":"var wireType: String? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.wireType","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/wire-type.html","searchKeys":["wireType","var wireType: String? = null","com.example.datamanager.exchange.dto.XMLTowerDto.wireType"]},{"name":"var zigzag: Int? = null","description":"com.example.datamanager.database.entity.Tower.zigzag","location":"data-manager/com.example.datamanager.database.entity/-tower/zigzag.html","searchKeys":["zigzag","var zigzag: Int? = null","com.example.datamanager.database.entity.Tower.zigzag"]},{"name":"var zigzag: Int? = null","description":"com.example.datamanager.exchange.dto.XMLTowerDto.zigzag","location":"data-manager/com.example.datamanager.exchange.dto/-x-m-l-tower-dto/zigzag.html","searchKeys":["zigzag","var zigzag: Int? = null","com.example.datamanager.exchange.dto.XMLTowerDto.zigzag"]}]
